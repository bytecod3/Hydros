
hydros-v1-firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  0000123e  000012d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000123e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800232  00800232  00001304  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001360  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024f3  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000123a  00000000  00000000  000039fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df3  00000000  00000000  00004c35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000508  00000000  00000000  00005a28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000837  00000000  00000000  00005f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e58  00000000  00000000  00006767  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000085bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f2 c0       	rjmp	.+484    	; 0x1e6 <__ctors_end>
       2:	00 00       	nop
       4:	10 c1       	rjmp	.+544    	; 0x226 <__bad_interrupt>
       6:	00 00       	nop
       8:	0e c1       	rjmp	.+540    	; 0x226 <__bad_interrupt>
       a:	00 00       	nop
       c:	0c c1       	rjmp	.+536    	; 0x226 <__bad_interrupt>
       e:	00 00       	nop
      10:	0a c1       	rjmp	.+532    	; 0x226 <__bad_interrupt>
      12:	00 00       	nop
      14:	37 c3       	rjmp	.+1646   	; 0x684 <__vector_5>
      16:	00 00       	nop
      18:	06 c1       	rjmp	.+524    	; 0x226 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	04 c1       	rjmp	.+520    	; 0x226 <__bad_interrupt>
      1e:	00 00       	nop
      20:	02 c1       	rjmp	.+516    	; 0x226 <__bad_interrupt>
      22:	00 00       	nop
      24:	00 c1       	rjmp	.+512    	; 0x226 <__bad_interrupt>
      26:	00 00       	nop
      28:	fe c0       	rjmp	.+508    	; 0x226 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	fc c0       	rjmp	.+504    	; 0x226 <__bad_interrupt>
      2e:	00 00       	nop
      30:	fa c0       	rjmp	.+500    	; 0x226 <__bad_interrupt>
      32:	00 00       	nop
      34:	f8 c0       	rjmp	.+496    	; 0x226 <__bad_interrupt>
      36:	00 00       	nop
      38:	f6 c0       	rjmp	.+492    	; 0x226 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f4 c0       	rjmp	.+488    	; 0x226 <__bad_interrupt>
      3e:	00 00       	nop
      40:	f2 c0       	rjmp	.+484    	; 0x226 <__bad_interrupt>
      42:	00 00       	nop
      44:	04 c3       	rjmp	.+1544   	; 0x64e <__vector_17>
      46:	00 00       	nop
      48:	ee c0       	rjmp	.+476    	; 0x226 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ec c0       	rjmp	.+472    	; 0x226 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ea c0       	rjmp	.+468    	; 0x226 <__bad_interrupt>
      52:	00 00       	nop
      54:	e8 c0       	rjmp	.+464    	; 0x226 <__bad_interrupt>
      56:	00 00       	nop
      58:	e6 c0       	rjmp	.+460    	; 0x226 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e4 c0       	rjmp	.+456    	; 0x226 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e2 c0       	rjmp	.+452    	; 0x226 <__bad_interrupt>
      62:	00 00       	nop
      64:	e0 c0       	rjmp	.+448    	; 0x226 <__bad_interrupt>
      66:	00 00       	nop
      68:	de c0       	rjmp	.+444    	; 0x226 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	dc c0       	rjmp	.+440    	; 0x226 <__bad_interrupt>
      6e:	00 00       	nop
      70:	da c0       	rjmp	.+436    	; 0x226 <__bad_interrupt>
      72:	00 00       	nop
      74:	d8 c0       	rjmp	.+432    	; 0x226 <__bad_interrupt>
      76:	00 00       	nop
      78:	d6 c0       	rjmp	.+428    	; 0x226 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d4 c0       	rjmp	.+424    	; 0x226 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d2 c0       	rjmp	.+420    	; 0x226 <__bad_interrupt>
      82:	00 00       	nop
      84:	d0 c0       	rjmp	.+416    	; 0x226 <__bad_interrupt>
      86:	00 00       	nop
      88:	ce c0       	rjmp	.+412    	; 0x226 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	cc c0       	rjmp	.+408    	; 0x226 <__bad_interrupt>
      8e:	00 00       	nop
      90:	ca c0       	rjmp	.+404    	; 0x226 <__bad_interrupt>
      92:	00 00       	nop
      94:	c8 c0       	rjmp	.+400    	; 0x226 <__bad_interrupt>
      96:	00 00       	nop
      98:	c6 c0       	rjmp	.+396    	; 0x226 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c4 c0       	rjmp	.+392    	; 0x226 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	c2 c0       	rjmp	.+388    	; 0x226 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	c0 c0       	rjmp	.+384    	; 0x226 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	be c0       	rjmp	.+380    	; 0x226 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	bc c0       	rjmp	.+376    	; 0x226 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ba c0       	rjmp	.+372    	; 0x226 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b8 c0       	rjmp	.+368    	; 0x226 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b6 c0       	rjmp	.+364    	; 0x226 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b4 c0       	rjmp	.+360    	; 0x226 <__bad_interrupt>
      be:	00 00       	nop
      c0:	b2 c0       	rjmp	.+356    	; 0x226 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	b0 c0       	rjmp	.+352    	; 0x226 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ae c0       	rjmp	.+348    	; 0x226 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ac c0       	rjmp	.+344    	; 0x226 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	aa c0       	rjmp	.+340    	; 0x226 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a8 c0       	rjmp	.+336    	; 0x226 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a6 c0       	rjmp	.+332    	; 0x226 <__bad_interrupt>
      da:	00 00       	nop
      dc:	a4 c0       	rjmp	.+328    	; 0x226 <__bad_interrupt>
      de:	00 00       	nop
      e0:	a2 c0       	rjmp	.+324    	; 0x226 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	6e 61       	ori	r22, 0x1E	; 30
      e6:	6e 00       	.word	0x006e	; ????

000000e8 <__c.2332>:
      e8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      f8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     108:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     118:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     128:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     138:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     148:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     158:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     168:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     178:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     188:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     198:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1a8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1b8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1c8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1d8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001e6 <__ctors_end>:
     1e6:	11 24       	eor	r1, r1
     1e8:	1f be       	out	0x3f, r1	; 63
     1ea:	cf ef       	ldi	r28, 0xFF	; 255
     1ec:	d1 e2       	ldi	r29, 0x21	; 33
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	cd bf       	out	0x3d, r28	; 61
     1f2:	00 e0       	ldi	r16, 0x00	; 0
     1f4:	0c bf       	out	0x3c, r16	; 60

000001f6 <__do_copy_data>:
     1f6:	12 e0       	ldi	r17, 0x02	; 2
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b2 e0       	ldi	r27, 0x02	; 2
     1fc:	ee e3       	ldi	r30, 0x3E	; 62
     1fe:	f2 e1       	ldi	r31, 0x12	; 18
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0b bf       	out	0x3b, r16	; 59
     204:	02 c0       	rjmp	.+4      	; 0x20a <__do_copy_data+0x14>
     206:	07 90       	elpm	r0, Z+
     208:	0d 92       	st	X+, r0
     20a:	a2 33       	cpi	r26, 0x32	; 50
     20c:	b1 07       	cpc	r27, r17
     20e:	d9 f7       	brne	.-10     	; 0x206 <__do_copy_data+0x10>

00000210 <__do_clear_bss>:
     210:	22 e0       	ldi	r18, 0x02	; 2
     212:	a2 e3       	ldi	r26, 0x32	; 50
     214:	b2 e0       	ldi	r27, 0x02	; 2
     216:	01 c0       	rjmp	.+2      	; 0x21a <.do_clear_bss_start>

00000218 <.do_clear_bss_loop>:
     218:	1d 92       	st	X+, r1

0000021a <.do_clear_bss_start>:
     21a:	a6 33       	cpi	r26, 0x36	; 54
     21c:	b2 07       	cpc	r27, r18
     21e:	e1 f7       	brne	.-8      	; 0x218 <.do_clear_bss_loop>
     220:	48 d2       	rcall	.+1168   	; 0x6b2 <main>
     222:	0c 94 1d 09 	jmp	0x123a	; 0x123a <_exit>

00000226 <__bad_interrupt>:
     226:	ec ce       	rjmp	.-552    	; 0x0 <__vectors>

00000228 <therm_reset>:
}

uint8_t therm_reset() {
	uint8_t i;
	
	THERM_LOW();				// pull line low ans wait for 480us5
     228:	8e b1       	in	r24, 0x0e	; 14
     22a:	8f 7e       	andi	r24, 0xEF	; 239
     22c:	8e b9       	out	0x0e, r24	; 14
	THERM_OUTPUT_MODE();
     22e:	8d b1       	in	r24, 0x0d	; 13
     230:	80 61       	ori	r24, 0x10	; 16
     232:	8d b9       	out	0x0d, r24	; 13
     234:	80 ec       	ldi	r24, 0xC0	; 192
     236:	93 e0       	ldi	r25, 0x03	; 3
     238:	02 c0       	rjmp	.+4      	; 0x23e <therm_reset+0x16>
#include <stdio.h>
//#include <util/delay.h>
#include "ds18b20-untested.h"

inline __attribute__((gnu_inline)) void therm_delay(uint16_t delay) {
	while(delay--) asm volatile("nop");
     23a:	00 00       	nop
     23c:	c9 01       	movw	r24, r18
     23e:	9c 01       	movw	r18, r24
     240:	21 50       	subi	r18, 0x01	; 1
     242:	31 09       	sbc	r19, r1
     244:	89 2b       	or	r24, r25
     246:	c9 f7       	brne	.-14     	; 0x23a <therm_reset+0x12>
	THERM_LOW();				// pull line low ans wait for 480us5
	THERM_OUTPUT_MODE();
	therm_delay(us(480));
	//_delay_us(480);
	
	THERM_INPUT_MODE(); // release line and wait for 60us
     248:	8d b1       	in	r24, 0x0d	; 13
     24a:	8f 7e       	andi	r24, 0xEF	; 239
     24c:	8d b9       	out	0x0d, r24	; 13
     24e:	88 e7       	ldi	r24, 0x78	; 120
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	02 c0       	rjmp	.+4      	; 0x258 <therm_reset+0x30>
#include <stdio.h>
//#include <util/delay.h>
#include "ds18b20-untested.h"

inline __attribute__((gnu_inline)) void therm_delay(uint16_t delay) {
	while(delay--) asm volatile("nop");
     254:	00 00       	nop
     256:	c9 01       	movw	r24, r18
     258:	9c 01       	movw	r18, r24
     25a:	21 50       	subi	r18, 0x01	; 1
     25c:	31 09       	sbc	r19, r1
     25e:	89 2b       	or	r24, r25
     260:	c9 f7       	brne	.-14     	; 0x254 <therm_reset+0x2c>
	
	THERM_INPUT_MODE(); // release line and wait for 60us
	therm_delay(us(60));
	//_delay_us(60);
	
	i = (THERM_PIN & (1 << THERM_DQ) );
     262:	8c b1       	in	r24, 0x0c	; 12
     264:	80 71       	andi	r24, 0x10	; 16
     266:	28 e4       	ldi	r18, 0x48	; 72
     268:	33 e0       	ldi	r19, 0x03	; 3
     26a:	02 c0       	rjmp	.+4      	; 0x270 <therm_reset+0x48>
#include <stdio.h>
//#include <util/delay.h>
#include "ds18b20-untested.h"

inline __attribute__((gnu_inline)) void therm_delay(uint16_t delay) {
	while(delay--) asm volatile("nop");
     26c:	00 00       	nop
     26e:	9a 01       	movw	r18, r20
     270:	a9 01       	movw	r20, r18
     272:	41 50       	subi	r20, 0x01	; 1
     274:	51 09       	sbc	r21, r1
     276:	23 2b       	or	r18, r19
     278:	c9 f7       	brne	.-14     	; 0x26c <therm_reset+0x44>
	therm_delay(us(420));
	//_delay_us(420);
	
	return i; // 0 = OK, 1=ERROR
	
}
     27a:	08 95       	ret

0000027c <ds18b20crc8>:
	//Poor DS18B20 feels better then...
	*port |= mask;
	*direction |= mask;

	return DS18B20_ERROR_OK;
}
     27c:	dc 01       	movw	r26, r24
     27e:	80 e0       	ldi	r24, 0x00	; 0
     280:	40 e0       	ldi	r20, 0x00	; 0
     282:	12 c0       	rjmp	.+36     	; 0x2a8 <ds18b20crc8+0x2c>
     284:	fd 01       	movw	r30, r26
     286:	e4 0f       	add	r30, r20
     288:	f1 1d       	adc	r31, r1
     28a:	20 81       	ld	r18, Z
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	09 c0       	rjmp	.+18     	; 0x2a2 <ds18b20crc8+0x26>
     290:	38 2f       	mov	r19, r24
     292:	32 27       	eor	r19, r18
     294:	86 95       	lsr	r24
     296:	30 ff       	sbrs	r19, 0
     298:	02 c0       	rjmp	.+4      	; 0x29e <ds18b20crc8+0x22>
     29a:	3c e8       	ldi	r19, 0x8C	; 140
     29c:	83 27       	eor	r24, r19
     29e:	26 95       	lsr	r18
     2a0:	9f 5f       	subi	r25, 0xFF	; 255
     2a2:	98 30       	cpi	r25, 0x08	; 8
     2a4:	a8 f3       	brcs	.-22     	; 0x290 <ds18b20crc8+0x14>
     2a6:	4f 5f       	subi	r20, 0xFF	; 255
     2a8:	46 17       	cp	r20, r22
     2aa:	60 f3       	brcs	.-40     	; 0x284 <ds18b20crc8+0x8>
     2ac:	08 95       	ret

000002ae <ds18b20match>:
     2ae:	8f 92       	push	r8
     2b0:	9f 92       	push	r9
     2b2:	af 92       	push	r10
     2b4:	bf 92       	push	r11
     2b6:	cf 92       	push	r12
     2b8:	df 92       	push	r13
     2ba:	ef 92       	push	r14
     2bc:	ff 92       	push	r15
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	7c 01       	movw	r14, r24
     2c8:	6b 01       	movw	r12, r22
     2ca:	5a 01       	movw	r10, r20
     2cc:	d2 2f       	mov	r29, r18
     2ce:	48 01       	movw	r8, r16
     2d0:	01 2b       	or	r16, r17
     2d2:	19 f4       	brne	.+6      	; 0x2da <ds18b20match+0x2c>
     2d4:	0c ec       	ldi	r16, 0xCC	; 204
     2d6:	3f d1       	rcall	.+638    	; 0x556 <onewireWrite>
     2d8:	10 c0       	rjmp	.+32     	; 0x2fa <ds18b20match+0x4c>
     2da:	05 e5       	ldi	r16, 0x55	; 85
     2dc:	3c d1       	rcall	.+632    	; 0x556 <onewireWrite>
     2de:	c0 e0       	ldi	r28, 0x00	; 0
     2e0:	0a c0       	rjmp	.+20     	; 0x2f6 <ds18b20match+0x48>
     2e2:	f4 01       	movw	r30, r8
     2e4:	ec 0f       	add	r30, r28
     2e6:	f1 1d       	adc	r31, r1
     2e8:	00 81       	ld	r16, Z
     2ea:	2d 2f       	mov	r18, r29
     2ec:	a5 01       	movw	r20, r10
     2ee:	b6 01       	movw	r22, r12
     2f0:	c7 01       	movw	r24, r14
     2f2:	31 d1       	rcall	.+610    	; 0x556 <onewireWrite>
     2f4:	cf 5f       	subi	r28, 0xFF	; 255
     2f6:	c8 30       	cpi	r28, 0x08	; 8
     2f8:	a0 f3       	brcs	.-24     	; 0x2e2 <ds18b20match+0x34>
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	ff 90       	pop	r15
     304:	ef 90       	pop	r14
     306:	df 90       	pop	r13
     308:	cf 90       	pop	r12
     30a:	bf 90       	pop	r11
     30c:	af 90       	pop	r10
     30e:	9f 90       	pop	r9
     310:	8f 90       	pop	r8
     312:	08 95       	ret

00000314 <ds18b20convert>:
     314:	bf 92       	push	r11
     316:	cf 92       	push	r12
     318:	df 92       	push	r13
     31a:	ef 92       	push	r14
     31c:	ff 92       	push	r15
     31e:	0f 93       	push	r16
     320:	1f 93       	push	r17
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	ec 01       	movw	r28, r24
     328:	7b 01       	movw	r14, r22
     32a:	6a 01       	movw	r12, r20
     32c:	b2 2e       	mov	r11, r18
     32e:	a4 d0       	rcall	.+328    	; 0x478 <onewireInit>
     330:	81 30       	cpi	r24, 0x01	; 1
     332:	61 f0       	breq	.+24     	; 0x34c <ds18b20convert+0x38>
     334:	2b 2d       	mov	r18, r11
     336:	a6 01       	movw	r20, r12
     338:	b7 01       	movw	r22, r14
     33a:	ce 01       	movw	r24, r28
     33c:	b8 df       	rcall	.-144    	; 0x2ae <ds18b20match>
     33e:	04 e4       	ldi	r16, 0x44	; 68
     340:	2b 2d       	mov	r18, r11
     342:	a6 01       	movw	r20, r12
     344:	b7 01       	movw	r22, r14
     346:	ce 01       	movw	r24, r28
     348:	06 d1       	rcall	.+524    	; 0x556 <onewireWrite>
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	df 91       	pop	r29
     34e:	cf 91       	pop	r28
     350:	1f 91       	pop	r17
     352:	0f 91       	pop	r16
     354:	ff 90       	pop	r15
     356:	ef 90       	pop	r14
     358:	df 90       	pop	r13
     35a:	cf 90       	pop	r12
     35c:	bf 90       	pop	r11
     35e:	08 95       	ret

00000360 <ds18b20rsp>:
     360:	8f 92       	push	r8
     362:	9f 92       	push	r9
     364:	af 92       	push	r10
     366:	bf 92       	push	r11
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	0f 93       	push	r16
     372:	1f 93       	push	r17
     374:	cf 93       	push	r28
     376:	df 93       	push	r29
     378:	6c 01       	movw	r12, r24
     37a:	5b 01       	movw	r10, r22
     37c:	4a 01       	movw	r8, r20
     37e:	d2 2f       	mov	r29, r18
     380:	7b d0       	rcall	.+246    	; 0x478 <onewireInit>
     382:	81 30       	cpi	r24, 0x01	; 1
     384:	b9 f1       	breq	.+110    	; 0x3f4 <ds18b20rsp+0x94>
     386:	2d 2f       	mov	r18, r29
     388:	a4 01       	movw	r20, r8
     38a:	b5 01       	movw	r22, r10
     38c:	c6 01       	movw	r24, r12
     38e:	8f df       	rcall	.-226    	; 0x2ae <ds18b20match>
     390:	0e eb       	ldi	r16, 0xBE	; 190
     392:	2d 2f       	mov	r18, r29
     394:	a4 01       	movw	r20, r8
     396:	b5 01       	movw	r22, r10
     398:	c6 01       	movw	r24, r12
     39a:	dd d0       	rcall	.+442    	; 0x556 <onewireWrite>
     39c:	c0 e0       	ldi	r28, 0x00	; 0
     39e:	0b c0       	rjmp	.+22     	; 0x3b6 <ds18b20rsp+0x56>
     3a0:	87 01       	movw	r16, r14
     3a2:	0c 0f       	add	r16, r28
     3a4:	11 1d       	adc	r17, r1
     3a6:	2d 2f       	mov	r18, r29
     3a8:	a4 01       	movw	r20, r8
     3aa:	b5 01       	movw	r22, r10
     3ac:	c6 01       	movw	r24, r12
     3ae:	24 d1       	rcall	.+584    	; 0x5f8 <onewireRead>
     3b0:	f8 01       	movw	r30, r16
     3b2:	80 83       	st	Z, r24
     3b4:	cf 5f       	subi	r28, 0xFF	; 255
     3b6:	c9 30       	cpi	r28, 0x09	; 9
     3b8:	98 f3       	brcs	.-26     	; 0x3a0 <ds18b20rsp+0x40>
     3ba:	f7 01       	movw	r30, r14
     3bc:	70 81       	ld	r23, Z
     3be:	81 81       	ldd	r24, Z+1	; 0x01
     3c0:	62 81       	ldd	r22, Z+2	; 0x02
     3c2:	53 81       	ldd	r21, Z+3	; 0x03
     3c4:	44 81       	ldd	r20, Z+4	; 0x04
     3c6:	35 81       	ldd	r19, Z+5	; 0x05
     3c8:	26 81       	ldd	r18, Z+6	; 0x06
     3ca:	97 81       	ldd	r25, Z+7	; 0x07
     3cc:	87 2b       	or	r24, r23
     3ce:	86 2b       	or	r24, r22
     3d0:	85 2b       	or	r24, r21
     3d2:	84 2b       	or	r24, r20
     3d4:	83 2b       	or	r24, r19
     3d6:	82 2b       	or	r24, r18
     3d8:	89 2b       	or	r24, r25
     3da:	49 f0       	breq	.+18     	; 0x3ee <ds18b20rsp+0x8e>
     3dc:	68 e0       	ldi	r22, 0x08	; 8
     3de:	c7 01       	movw	r24, r14
     3e0:	4d df       	rcall	.-358    	; 0x27c <ds18b20crc8>
     3e2:	f7 01       	movw	r30, r14
     3e4:	90 85       	ldd	r25, Z+8	; 0x08
     3e6:	89 17       	cp	r24, r25
     3e8:	21 f0       	breq	.+8      	; 0x3f2 <ds18b20rsp+0x92>
     3ea:	82 e0       	ldi	r24, 0x02	; 2
     3ec:	03 c0       	rjmp	.+6      	; 0x3f4 <ds18b20rsp+0x94>
     3ee:	83 e0       	ldi	r24, 0x03	; 3
     3f0:	01 c0       	rjmp	.+2      	; 0x3f4 <ds18b20rsp+0x94>
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	1f 91       	pop	r17
     3fa:	0f 91       	pop	r16
     3fc:	ff 90       	pop	r15
     3fe:	ef 90       	pop	r14
     400:	df 90       	pop	r13
     402:	cf 90       	pop	r12
     404:	bf 90       	pop	r11
     406:	af 90       	pop	r10
     408:	9f 90       	pop	r9
     40a:	8f 90       	pop	r8
     40c:	08 95       	ret

0000040e <ds18b20read>:

//! Read temperature
uint8_t ds18b20read( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask, uint8_t *rom, int16_t *temperature )
{
     40e:	cf 92       	push	r12
     410:	df 92       	push	r13
     412:	ef 92       	push	r14
     414:	ff 92       	push	r15
     416:	0f 93       	push	r16
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	cd b7       	in	r28, 0x3d	; 61
     420:	de b7       	in	r29, 0x3e	; 62
     422:	29 97       	sbiw	r28, 0x09	; 9
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
     42e:	67 01       	movw	r12, r14

	uint8_t sp[9];
	uint8_t ec = 0;

	//Communication, pull-up, CRC checks happen here
	ec = ds18b20rsp( port, direction, portin, mask, rom, sp );
     430:	fe 01       	movw	r30, r28
     432:	31 96       	adiw	r30, 0x01	; 1
     434:	7f 01       	movw	r14, r30
     436:	94 df       	rcall	.-216    	; 0x360 <ds18b20rsp>

	if ( ec != DS18B20_ERROR_OK )
     438:	88 23       	and	r24, r24
     43a:	21 f0       	breq	.+8      	; 0x444 <ds18b20read+0x36>
	{
		*temperature = 0;
     43c:	f6 01       	movw	r30, r12
     43e:	11 82       	std	Z+1, r1	; 0x01
     440:	10 82       	st	Z, r1
		return ec;
     442:	0b c0       	rjmp	.+22     	; 0x45a <ds18b20read+0x4c>
	}

	//Get temperature from received data
	*temperature = (int16_t)( sp[1] << 8 ) + sp[0];
     444:	8a 81       	ldd	r24, Y+2	; 0x02
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	98 2f       	mov	r25, r24
     44a:	88 27       	eor	r24, r24
     44c:	29 81       	ldd	r18, Y+1	; 0x01
     44e:	82 0f       	add	r24, r18
     450:	91 1d       	adc	r25, r1
     452:	f6 01       	movw	r30, r12
     454:	91 83       	std	Z+1, r25	; 0x01
     456:	80 83       	st	Z, r24

	return DS18B20_ERROR_OK;
     458:	80 e0       	ldi	r24, 0x00	; 0
}
     45a:	29 96       	adiw	r28, 0x09	; 9
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
     464:	cd bf       	out	0x3d, r28	; 61
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	ff 90       	pop	r15
     470:	ef 90       	pop	r14
     472:	df 90       	pop	r13
     474:	cf 90       	pop	r12
     476:	08 95       	ret

00000478 <onewireInit>:
#include <inttypes.h>
#include "onewire.h"

//! Initializes 1wire bus before transmission
uint8_t onewireInit( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask )
{
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	dc 01       	movw	r26, r24
     47e:	fb 01       	movw	r30, r22
	uint8_t response = 0;
	uint8_t sreg = SREG; //Store status register
     480:	3f b7       	in	r19, 0x3f	; 63

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	*port |= mask; //Write 1 to output
     482:	8c 91       	ld	r24, X
     484:	82 2b       	or	r24, r18
     486:	8c 93       	st	X, r24
	*direction |= mask; //Set port to output
     488:	80 81       	ld	r24, Z
     48a:	82 2b       	or	r24, r18
     48c:	80 83       	st	Z, r24
	*port &= ~mask; //Write 0 to output
     48e:	9c 91       	ld	r25, X
     490:	82 2f       	mov	r24, r18
     492:	80 95       	com	r24
     494:	98 23       	and	r25, r24
     496:	9c 93       	st	X, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     498:	cf e5       	ldi	r28, 0x5F	; 95
     49a:	d9 e0       	ldi	r29, 0x09	; 9
     49c:	21 97       	sbiw	r28, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <onewireInit+0x24>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <onewireInit+0x2a>
     4a2:	00 00       	nop

	_delay_us( 600 );

	*direction &= ~mask; //Set port to input
     4a4:	90 81       	ld	r25, Z
     4a6:	89 23       	and	r24, r25
     4a8:	80 83       	st	Z, r24
     4aa:	87 e1       	ldi	r24, 0x17	; 23
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	01 97       	sbiw	r24, 0x01	; 1
     4b0:	f1 f7       	brne	.-4      	; 0x4ae <onewireInit+0x36>
     4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <onewireInit+0x3c>
     4b4:	00 00       	nop

	_delay_us( 70 );

	response = *portin & mask; //Read input
     4b6:	ea 01       	movw	r28, r20
     4b8:	98 81       	ld	r25, Y
     4ba:	92 23       	and	r25, r18
     4bc:	cf e1       	ldi	r28, 0x1F	; 31
     4be:	d3 e0       	ldi	r29, 0x03	; 3
     4c0:	21 97       	sbiw	r28, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <onewireInit+0x48>
     4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <onewireInit+0x4e>
     4c6:	00 00       	nop

	_delay_us( 200 );

	*port |= mask; //Write 1 to output
     4c8:	8c 91       	ld	r24, X
     4ca:	82 2b       	or	r24, r18
     4cc:	8c 93       	st	X, r24
	*direction |= mask; //Set port to output
     4ce:	80 81       	ld	r24, Z
     4d0:	28 2b       	or	r18, r24
     4d2:	20 83       	st	Z, r18
     4d4:	ef e5       	ldi	r30, 0x5F	; 95
     4d6:	f9 e0       	ldi	r31, 0x09	; 9
     4d8:	31 97       	sbiw	r30, 0x01	; 1
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <onewireInit+0x60>
     4dc:	00 c0       	rjmp	.+0      	; 0x4de <onewireInit+0x66>
     4de:	00 00       	nop

	_delay_us( 600 );

	SREG = sreg; //Restore status register
     4e0:	3f bf       	out	0x3f, r19	; 63

	return response != 0 ? ONEWIRE_ERROR_COMM : ONEWIRE_ERROR_OK;
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	91 11       	cpse	r25, r1
     4e6:	01 c0       	rjmp	.+2      	; 0x4ea <onewireInit+0x72>
     4e8:	80 e0       	ldi	r24, 0x00	; 0
}
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	08 95       	ret

000004f0 <onewireWriteBit>:

//! Sends a single bit over the 1wire bus
uint8_t onewireWriteBit( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask, uint8_t bit )
{
     4f0:	0f 93       	push	r16
     4f2:	fc 01       	movw	r30, r24
	uint8_t sreg = SREG;
     4f4:	9f b7       	in	r25, 0x3f	; 63

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	*port |= mask; //Write 1 to output
     4f6:	80 81       	ld	r24, Z
     4f8:	82 2b       	or	r24, r18
     4fa:	80 83       	st	Z, r24
	*direction |= mask;
     4fc:	db 01       	movw	r26, r22
     4fe:	8c 91       	ld	r24, X
     500:	82 2b       	or	r24, r18
     502:	8c 93       	st	X, r24
	*port &= ~mask; //Write 0 to output
     504:	80 81       	ld	r24, Z
     506:	32 2f       	mov	r19, r18
     508:	30 95       	com	r19
     50a:	83 23       	and	r24, r19
     50c:	80 83       	st	Z, r24

	if ( bit != 0 ) _delay_us( 8 );
     50e:	00 23       	and	r16, r16
     510:	29 f0       	breq	.+10     	; 0x51c <onewireWriteBit+0x2c>
     512:	ba e2       	ldi	r27, 0x2A	; 42
     514:	ba 95       	dec	r27
     516:	f1 f7       	brne	.-4      	; 0x514 <onewireWriteBit+0x24>
     518:	00 c0       	rjmp	.+0      	; 0x51a <onewireWriteBit+0x2a>
     51a:	06 c0       	rjmp	.+12     	; 0x528 <onewireWriteBit+0x38>
     51c:	af e3       	ldi	r26, 0x3F	; 63
     51e:	b1 e0       	ldi	r27, 0x01	; 1
     520:	11 97       	sbiw	r26, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <onewireWriteBit+0x30>
     524:	00 c0       	rjmp	.+0      	; 0x526 <onewireWriteBit+0x36>
     526:	00 00       	nop
	else _delay_us( 80 );

	*port |= mask;
     528:	80 81       	ld	r24, Z
     52a:	28 2b       	or	r18, r24
     52c:	20 83       	st	Z, r18

	if ( bit != 0 ) _delay_us( 80 );
     52e:	00 23       	and	r16, r16
     530:	39 f0       	breq	.+14     	; 0x540 <onewireWriteBit+0x50>
     532:	ef e3       	ldi	r30, 0x3F	; 63
     534:	f1 e0       	ldi	r31, 0x01	; 1
     536:	31 97       	sbiw	r30, 0x01	; 1
     538:	f1 f7       	brne	.-4      	; 0x536 <onewireWriteBit+0x46>
     53a:	00 c0       	rjmp	.+0      	; 0x53c <onewireWriteBit+0x4c>
     53c:	00 00       	nop
     53e:	04 c0       	rjmp	.+8      	; 0x548 <onewireWriteBit+0x58>
     540:	fa e0       	ldi	r31, 0x0A	; 10
     542:	fa 95       	dec	r31
     544:	f1 f7       	brne	.-4      	; 0x542 <onewireWriteBit+0x52>
     546:	00 c0       	rjmp	.+0      	; 0x548 <onewireWriteBit+0x58>
	else _delay_us( 2 );

	SREG = sreg;
     548:	9f bf       	out	0x3f, r25	; 63

	return bit != 0;
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	01 11       	cpse	r16, r1
     54e:	01 c0       	rjmp	.+2      	; 0x552 <onewireWriteBit+0x62>
     550:	80 e0       	ldi	r24, 0x00	; 0
}
     552:	0f 91       	pop	r16
     554:	08 95       	ret

00000556 <onewireWrite>:

//! Transmits a byte over 1wire bus
void onewireWrite( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask, uint8_t data )
{
     556:	9f 92       	push	r9
     558:	af 92       	push	r10
     55a:	bf 92       	push	r11
     55c:	cf 92       	push	r12
     55e:	df 92       	push	r13
     560:	ef 92       	push	r14
     562:	ff 92       	push	r15
     564:	0f 93       	push	r16
     566:	1f 93       	push	r17
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	5c 01       	movw	r10, r24
     56e:	6b 01       	movw	r12, r22
     570:	7a 01       	movw	r14, r20
     572:	12 2f       	mov	r17, r18
     574:	d0 2f       	mov	r29, r16
	uint8_t sreg = SREG; //Store status register
     576:	9f b6       	in	r9, 0x3f	; 63

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	for ( i = 1; i != 0; i <<= 1 ) //Write byte in 8 single bit writes
     578:	c1 e0       	ldi	r28, 0x01	; 1
     57a:	08 c0       	rjmp	.+16     	; 0x58c <onewireWrite+0x36>
		onewireWriteBit( port, direction, portin, mask, data & i );
     57c:	0c 2f       	mov	r16, r28
     57e:	0d 23       	and	r16, r29
     580:	21 2f       	mov	r18, r17
     582:	a7 01       	movw	r20, r14
     584:	b6 01       	movw	r22, r12
     586:	c5 01       	movw	r24, r10
     588:	b3 df       	rcall	.-154    	; 0x4f0 <onewireWriteBit>

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	for ( i = 1; i != 0; i <<= 1 ) //Write byte in 8 single bit writes
     58a:	cc 0f       	add	r28, r28
     58c:	c1 11       	cpse	r28, r1
     58e:	f6 cf       	rjmp	.-20     	; 0x57c <onewireWrite+0x26>
		onewireWriteBit( port, direction, portin, mask, data & i );

	SREG = sreg;
     590:	9f be       	out	0x3f, r9	; 63
}
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	1f 91       	pop	r17
     598:	0f 91       	pop	r16
     59a:	ff 90       	pop	r15
     59c:	ef 90       	pop	r14
     59e:	df 90       	pop	r13
     5a0:	cf 90       	pop	r12
     5a2:	bf 90       	pop	r11
     5a4:	af 90       	pop	r10
     5a6:	9f 90       	pop	r9
     5a8:	08 95       	ret

000005aa <onewireReadBit>:

//! Reads a bit from the 1wire bus
uint8_t onewireReadBit( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask )
{
     5aa:	dc 01       	movw	r26, r24
     5ac:	fb 01       	movw	r30, r22
	uint8_t bit = 0;
	uint8_t sreg = SREG;
     5ae:	3f b7       	in	r19, 0x3f	; 63

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	*port |= mask; //Write 1 to output
     5b0:	8c 91       	ld	r24, X
     5b2:	82 2b       	or	r24, r18
     5b4:	8c 93       	st	X, r24
	*direction |= mask;
     5b6:	80 81       	ld	r24, Z
     5b8:	82 2b       	or	r24, r18
     5ba:	80 83       	st	Z, r24
	*port &= ~mask; //Write 0 to output
     5bc:	8c 91       	ld	r24, X
     5be:	92 2f       	mov	r25, r18
     5c0:	90 95       	com	r25
     5c2:	89 23       	and	r24, r25
     5c4:	8c 93       	st	X, r24
     5c6:	8a e0       	ldi	r24, 0x0A	; 10
     5c8:	8a 95       	dec	r24
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <onewireReadBit+0x1e>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <onewireReadBit+0x24>
	_delay_us( 2 );
	*direction &= ~mask; //Set port to input
     5ce:	80 81       	ld	r24, Z
     5d0:	98 23       	and	r25, r24
     5d2:	90 83       	st	Z, r25
     5d4:	ea e1       	ldi	r30, 0x1A	; 26
     5d6:	ea 95       	dec	r30
     5d8:	f1 f7       	brne	.-4      	; 0x5d6 <onewireReadBit+0x2c>
     5da:	00 c0       	rjmp	.+0      	; 0x5dc <onewireReadBit+0x32>
	_delay_us( 5 );
	bit = ( ( *portin & mask ) != 0 ); //Read input
     5dc:	fa 01       	movw	r30, r20
     5de:	80 81       	ld	r24, Z
     5e0:	28 23       	and	r18, r24
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <onewireReadBit+0x3e>
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	ef ee       	ldi	r30, 0xEF	; 239
     5ea:	f0 e0       	ldi	r31, 0x00	; 0
     5ec:	31 97       	sbiw	r30, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <onewireReadBit+0x42>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <onewireReadBit+0x48>
     5f2:	00 00       	nop
	_delay_us( 60 );
	SREG = sreg;
     5f4:	3f bf       	out	0x3f, r19	; 63

	return bit;
}
     5f6:	08 95       	ret

000005f8 <onewireRead>:

//! Reads a byte from the 1wire bus
uint8_t onewireRead( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask )
{
     5f8:	af 92       	push	r10
     5fa:	bf 92       	push	r11
     5fc:	cf 92       	push	r12
     5fe:	df 92       	push	r13
     600:	ef 92       	push	r14
     602:	ff 92       	push	r15
     604:	0f 93       	push	r16
     606:	1f 93       	push	r17
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	5c 01       	movw	r10, r24
     60e:	6b 01       	movw	r12, r22
     610:	7a 01       	movw	r14, r20
     612:	12 2f       	mov	r17, r18
	uint8_t sreg = SREG; //Store status register
     614:	0f b7       	in	r16, 0x3f	; 63

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	for ( i = 1; i != 0; i <<= 1 ) //Read byte in 8 single bit reads
     616:	c1 e0       	ldi	r28, 0x01	; 1

//! Reads a byte from the 1wire bus
uint8_t onewireRead( volatile uint8_t *port, volatile uint8_t *direction, volatile uint8_t *portin, uint8_t mask )
{
	uint8_t sreg = SREG; //Store status register
	uint8_t data = 0;
     618:	d0 e0       	ldi	r29, 0x00	; 0

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	for ( i = 1; i != 0; i <<= 1 ) //Read byte in 8 single bit reads
     61a:	0a c0       	rjmp	.+20     	; 0x630 <onewireRead+0x38>
		data |= onewireReadBit( port, direction, portin, mask ) * i;
     61c:	21 2f       	mov	r18, r17
     61e:	a7 01       	movw	r20, r14
     620:	b6 01       	movw	r22, r12
     622:	c5 01       	movw	r24, r10
     624:	c2 df       	rcall	.-124    	; 0x5aa <onewireReadBit>
     626:	8c 9f       	mul	r24, r28
     628:	c0 01       	movw	r24, r0
     62a:	11 24       	eor	r1, r1
     62c:	d8 2b       	or	r29, r24

	#ifdef ONEWIRE_AUTO_CLI
		cli( );
	#endif

	for ( i = 1; i != 0; i <<= 1 ) //Read byte in 8 single bit reads
     62e:	cc 0f       	add	r28, r28
     630:	c1 11       	cpse	r28, r1
     632:	f4 cf       	rjmp	.-24     	; 0x61c <onewireRead+0x24>
		data |= onewireReadBit( port, direction, portin, mask ) * i;

	SREG = sreg;
     634:	0f bf       	out	0x3f, r16	; 63

	return data;
}
     636:	8d 2f       	mov	r24, r29
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	1f 91       	pop	r17
     63e:	0f 91       	pop	r16
     640:	ff 90       	pop	r15
     642:	ef 90       	pop	r14
     644:	df 90       	pop	r13
     646:	cf 90       	pop	r12
     648:	bf 90       	pop	r11
     64a:	af 90       	pop	r10
     64c:	08 95       	ret

0000064e <__vector_17>:

/************************************************************************/
/* Interrupt service routines                                                                     */
/************************************************************************/
volatile int isr_tim1_counter = 0;
ISR(TIMER1_COMPA_vect) {
     64e:	1f 92       	push	r1
     650:	0f 92       	push	r0
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	0f 92       	push	r0
     656:	11 24       	eor	r1, r1
     658:	8f 93       	push	r24
     65a:	9f 93       	push	r25
	isr_tim1_counter++;
     65c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
     660:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x1>
     664:	01 96       	adiw	r24, 0x01	; 1
     666:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <__data_end+0x1>
     66a:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <__data_end>
	PORTD ^= (1 << PD0);
     66e:	9b b1       	in	r25, 0x0b	; 11
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	89 27       	eor	r24, r25
     674:	8b b9       	out	0x0b, r24	; 11
}
     676:	9f 91       	pop	r25
     678:	8f 91       	pop	r24
     67a:	0f 90       	pop	r0
     67c:	0f be       	out	0x3f, r0	; 63
     67e:	0f 90       	pop	r0
     680:	1f 90       	pop	r1
     682:	18 95       	reti

00000684 <__vector_5>:
/* Flow rate meter variables */
uint8_t flow_pin = 2;
float flow_rate = 0;
volatile int pulse_count;

ISR (INT4_vect) {
     684:	1f 92       	push	r1
     686:	0f 92       	push	r0
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	0f 92       	push	r0
     68c:	11 24       	eor	r1, r1
     68e:	8f 93       	push	r24
     690:	9f 93       	push	r25
	pulse_count++;
     692:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <pulse_count>
     696:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <pulse_count+0x1>
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <pulse_count+0x1>
     6a0:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <pulse_count>
}
     6a4:	9f 91       	pop	r25
     6a6:	8f 91       	pop	r24
     6a8:	0f 90       	pop	r0
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	0f 90       	pop	r0
     6ae:	1f 90       	pop	r1
     6b0:	18 95       	reti

000006b2 <main>:
#define THERM_DDR	DDRE
#define THERM_PIN	PINE
#define THERM_DQ	PE4

int main(void)
{ 
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	1f 92       	push	r1
     6b8:	1f 92       	push	r1
     6ba:	cd b7       	in	r28, 0x3d	; 61
     6bc:	de b7       	in	r29, 0x3e	; 62
	
	/* initialize hardware*/
	USART_init(MYUBRR);	
     6be:	87 e6       	ldi	r24, 0x67	; 103
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	33 d0       	rcall	.+102    	; 0x72a <USART_init>
	char* f_version = "Version: Hydros v1.0";
	USART_put_string(f_version);
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	92 e0       	ldi	r25, 0x02	; 2
     6c8:	42 d0       	rcall	.+132    	; 0x74e <USART_put_string>

	DDRD |= (1 << PD0); // OUTPUT MODE
     6ca:	8a b1       	in	r24, 0x0a	; 10
     6cc:	81 60       	ori	r24, 0x01	; 1
	
	// temperature sensor init 
	//DDRE &= (1 << THERM_DQ); // set temperature sensor pin as input
	int temp;
	
	uint8_t status = therm_reset();
     6ce:	8a b9       	out	0x0a, r24	; 10
     6d0:	ab dd       	rcall	.-1194   	; 0x228 <therm_reset>
	USART_put_string("DS INIT STATUS: ");
     6d2:	18 2f       	mov	r17, r24
     6d4:	85 e1       	ldi	r24, 0x15	; 21
     6d6:	92 e0       	ldi	r25, 0x02	; 2
	USART_send_int(status);
     6d8:	3a d0       	rcall	.+116    	; 0x74e <USART_put_string>
     6da:	81 2f       	mov	r24, r17
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	43 d0       	rcall	.+134    	; 0x766 <USART_send_int>
		//flow_rate = flow_meter_get_flow_rate(pulse_count);
		
		// USART_send_int(pulse_count);
		//USART_send_float(flow_rate);
		
		ds18b20convert(&THERM_PORT, &THERM_DDR, &THERM_PIN, (1<< THERM_DQ), NULL);
     6e0:	00 e0       	ldi	r16, 0x00	; 0
     6e2:	10 e0       	ldi	r17, 0x00	; 0
     6e4:	20 e1       	ldi	r18, 0x10	; 16
     6e6:	4c e2       	ldi	r20, 0x2C	; 44
     6e8:	50 e0       	ldi	r21, 0x00	; 0
     6ea:	6d e2       	ldi	r22, 0x2D	; 45
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	8e e2       	ldi	r24, 0x2E	; 46
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	10 de       	rcall	.-992    	; 0x314 <ds18b20convert>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6f4:	2f ef       	ldi	r18, 0xFF	; 255
     6f6:	83 ed       	ldi	r24, 0xD3	; 211
     6f8:	90 e3       	ldi	r25, 0x30	; 48
     6fa:	21 50       	subi	r18, 0x01	; 1
     6fc:	80 40       	sbci	r24, 0x00	; 0
     6fe:	90 40       	sbci	r25, 0x00	; 0
     700:	e1 f7       	brne	.-8      	; 0x6fa <main+0x48>
     702:	00 c0       	rjmp	.+0      	; 0x704 <main+0x52>
     704:	00 00       	nop
		_delay_ms(1000);
		ds18b20read(&THERM_PORT, &THERM_DDR, &THERM_PIN, (1<< THERM_DQ), NULL, &temp);
     706:	ce 01       	movw	r24, r28
     708:	01 96       	adiw	r24, 0x01	; 1
     70a:	7c 01       	movw	r14, r24
     70c:	20 e1       	ldi	r18, 0x10	; 16
     70e:	4c e2       	ldi	r20, 0x2C	; 44
     710:	50 e0       	ldi	r21, 0x00	; 0
     712:	6d e2       	ldi	r22, 0x2D	; 45
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	8e e2       	ldi	r24, 0x2E	; 46
     718:	90 e0       	ldi	r25, 0x00	; 0
		
		USART_send_int(temp);
     71a:	79 de       	rcall	.-782    	; 0x40e <ds18b20read>
     71c:	89 81       	ldd	r24, Y+1	; 0x01
     71e:	9a 81       	ldd	r25, Y+2	; 0x02
     720:	22 d0       	rcall	.+68     	; 0x766 <USART_send_int>
		USART_put_string("\r\n");
     722:	88 e2       	ldi	r24, 0x28	; 40
     724:	92 e0       	ldi	r25, 0x02	; 2
     726:	13 d0       	rcall	.+38     	; 0x74e <USART_put_string>
     728:	db cf       	rjmp	.-74     	; 0x6e0 <main+0x2e>

0000072a <USART_init>:
     72a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>

unsigned char USART_receive() {
	/*check if RXC (receive complete flag) is set */
	while(!(UCSR0A & (1 << RXC0)));
	return UDR0;
}
     72e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
     732:	88 e1       	ldi	r24, 0x18	; 24
     734:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
     738:	8e e0       	ldi	r24, 0x0E	; 14
     73a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
     73e:	08 95       	ret

00000740 <USART_transmit>:
     740:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     744:	95 ff       	sbrs	r25, 5
     746:	fc cf       	rjmp	.-8      	; 0x740 <USART_transmit>
     748:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     74c:	08 95       	ret

0000074e <USART_put_string>:

void USART_put_string(char* pstr) {
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	ec 01       	movw	r28, r24
	/* loop until we are the end of the string */
	while(*pstr != 0x00) {
     754:	02 c0       	rjmp	.+4      	; 0x75a <USART_put_string+0xc>
		USART_transmit(*pstr);
     756:	f4 df       	rcall	.-24     	; 0x740 <USART_transmit>
		pstr++;
     758:	21 96       	adiw	r28, 0x01	; 1
	return UDR0;
}

void USART_put_string(char* pstr) {
	/* loop until we are the end of the string */
	while(*pstr != 0x00) {
     75a:	88 81       	ld	r24, Y
     75c:	81 11       	cpse	r24, r1
     75e:	fb cf       	rjmp	.-10     	; 0x756 <USART_put_string+0x8>
		USART_transmit(*pstr);
		pstr++;
	}
}
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	08 95       	ret

00000766 <USART_send_int>:

void USART_send_int(int a) {
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	cd b7       	in	r28, 0x3d	; 61
     770:	de b7       	in	r29, 0x3e	; 62
     772:	2a 97       	sbiw	r28, 0x0a	; 10
     774:	0f b6       	in	r0, 0x3f	; 63
     776:	f8 94       	cli
     778:	de bf       	out	0x3e, r29	; 62
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	cd bf       	out	0x3d, r28	; 61
	char b[10];
	sprintf(b, "%d\r\n", a);
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	86 e2       	ldi	r24, 0x26	; 38
     784:	92 e0       	ldi	r25, 0x02	; 2
     786:	9f 93       	push	r25
     788:	8f 93       	push	r24
     78a:	8e 01       	movw	r16, r28
     78c:	0f 5f       	subi	r16, 0xFF	; 255
     78e:	1f 4f       	sbci	r17, 0xFF	; 255
     790:	1f 93       	push	r17
     792:	0f 93       	push	r16
     794:	c6 d4       	rcall	.+2444   	; 0x1122 <sprintf>
	USART_put_string(b);
     796:	c8 01       	movw	r24, r16
     798:	da df       	rcall	.-76     	; 0x74e <USART_put_string>
}
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	0f 90       	pop	r0
     7a0:	0f 90       	pop	r0
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	2a 96       	adiw	r28, 0x0a	; 10
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	de bf       	out	0x3e, r29	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	1f 91       	pop	r17
     7b8:	0f 91       	pop	r16
     7ba:	08 95       	ret

000007bc <vfprintf>:
     7bc:	2f 92       	push	r2
     7be:	3f 92       	push	r3
     7c0:	4f 92       	push	r4
     7c2:	5f 92       	push	r5
     7c4:	6f 92       	push	r6
     7c6:	7f 92       	push	r7
     7c8:	8f 92       	push	r8
     7ca:	9f 92       	push	r9
     7cc:	af 92       	push	r10
     7ce:	bf 92       	push	r11
     7d0:	cf 92       	push	r12
     7d2:	df 92       	push	r13
     7d4:	ef 92       	push	r14
     7d6:	ff 92       	push	r15
     7d8:	0f 93       	push	r16
     7da:	1f 93       	push	r17
     7dc:	cf 93       	push	r28
     7de:	df 93       	push	r29
     7e0:	cd b7       	in	r28, 0x3d	; 61
     7e2:	de b7       	in	r29, 0x3e	; 62
     7e4:	60 97       	sbiw	r28, 0x10	; 16
     7e6:	0f b6       	in	r0, 0x3f	; 63
     7e8:	f8 94       	cli
     7ea:	de bf       	out	0x3e, r29	; 62
     7ec:	0f be       	out	0x3f, r0	; 63
     7ee:	cd bf       	out	0x3d, r28	; 61
     7f0:	7c 01       	movw	r14, r24
     7f2:	1b 01       	movw	r2, r22
     7f4:	6a 01       	movw	r12, r20
     7f6:	fc 01       	movw	r30, r24
     7f8:	17 82       	std	Z+7, r1	; 0x07
     7fa:	16 82       	std	Z+6, r1	; 0x06
     7fc:	83 81       	ldd	r24, Z+3	; 0x03
     7fe:	81 ff       	sbrs	r24, 1
     800:	2a c3       	rjmp	.+1620   	; 0xe56 <vfprintf+0x69a>
     802:	9e 01       	movw	r18, r28
     804:	2f 5f       	subi	r18, 0xFF	; 255
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	39 01       	movw	r6, r18
     80a:	f7 01       	movw	r30, r14
     80c:	93 81       	ldd	r25, Z+3	; 0x03
     80e:	f1 01       	movw	r30, r2
     810:	93 fd       	sbrc	r25, 3
     812:	85 91       	lpm	r24, Z+
     814:	93 ff       	sbrs	r25, 3
     816:	81 91       	ld	r24, Z+
     818:	1f 01       	movw	r2, r30
     81a:	88 23       	and	r24, r24
     81c:	09 f4       	brne	.+2      	; 0x820 <vfprintf+0x64>
     81e:	17 c3       	rjmp	.+1582   	; 0xe4e <vfprintf+0x692>
     820:	85 32       	cpi	r24, 0x25	; 37
     822:	39 f4       	brne	.+14     	; 0x832 <vfprintf+0x76>
     824:	93 fd       	sbrc	r25, 3
     826:	85 91       	lpm	r24, Z+
     828:	93 ff       	sbrs	r25, 3
     82a:	81 91       	ld	r24, Z+
     82c:	1f 01       	movw	r2, r30
     82e:	85 32       	cpi	r24, 0x25	; 37
     830:	31 f4       	brne	.+12     	; 0x83e <vfprintf+0x82>
     832:	b7 01       	movw	r22, r14
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	39 d4       	rcall	.+2162   	; 0x10aa <fputc>
     838:	56 01       	movw	r10, r12
     83a:	65 01       	movw	r12, r10
     83c:	e6 cf       	rjmp	.-52     	; 0x80a <vfprintf+0x4e>
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	51 2c       	mov	r5, r1
     842:	91 2c       	mov	r9, r1
     844:	ff e1       	ldi	r31, 0x1F	; 31
     846:	f9 15       	cp	r31, r9
     848:	d8 f0       	brcs	.+54     	; 0x880 <vfprintf+0xc4>
     84a:	8b 32       	cpi	r24, 0x2B	; 43
     84c:	79 f0       	breq	.+30     	; 0x86c <vfprintf+0xb0>
     84e:	38 f4       	brcc	.+14     	; 0x85e <vfprintf+0xa2>
     850:	80 32       	cpi	r24, 0x20	; 32
     852:	79 f0       	breq	.+30     	; 0x872 <vfprintf+0xb6>
     854:	83 32       	cpi	r24, 0x23	; 35
     856:	a1 f4       	brne	.+40     	; 0x880 <vfprintf+0xc4>
     858:	f9 2d       	mov	r31, r9
     85a:	f0 61       	ori	r31, 0x10	; 16
     85c:	2e c0       	rjmp	.+92     	; 0x8ba <vfprintf+0xfe>
     85e:	8d 32       	cpi	r24, 0x2D	; 45
     860:	61 f0       	breq	.+24     	; 0x87a <vfprintf+0xbe>
     862:	80 33       	cpi	r24, 0x30	; 48
     864:	69 f4       	brne	.+26     	; 0x880 <vfprintf+0xc4>
     866:	29 2d       	mov	r18, r9
     868:	21 60       	ori	r18, 0x01	; 1
     86a:	2d c0       	rjmp	.+90     	; 0x8c6 <vfprintf+0x10a>
     86c:	39 2d       	mov	r19, r9
     86e:	32 60       	ori	r19, 0x02	; 2
     870:	93 2e       	mov	r9, r19
     872:	89 2d       	mov	r24, r9
     874:	84 60       	ori	r24, 0x04	; 4
     876:	98 2e       	mov	r9, r24
     878:	2a c0       	rjmp	.+84     	; 0x8ce <vfprintf+0x112>
     87a:	e9 2d       	mov	r30, r9
     87c:	e8 60       	ori	r30, 0x08	; 8
     87e:	15 c0       	rjmp	.+42     	; 0x8aa <vfprintf+0xee>
     880:	97 fc       	sbrc	r9, 7
     882:	2d c0       	rjmp	.+90     	; 0x8de <vfprintf+0x122>
     884:	20 ed       	ldi	r18, 0xD0	; 208
     886:	28 0f       	add	r18, r24
     888:	2a 30       	cpi	r18, 0x0A	; 10
     88a:	88 f4       	brcc	.+34     	; 0x8ae <vfprintf+0xf2>
     88c:	96 fe       	sbrs	r9, 6
     88e:	06 c0       	rjmp	.+12     	; 0x89c <vfprintf+0xe0>
     890:	3a e0       	ldi	r19, 0x0A	; 10
     892:	13 9f       	mul	r17, r19
     894:	20 0d       	add	r18, r0
     896:	11 24       	eor	r1, r1
     898:	12 2f       	mov	r17, r18
     89a:	19 c0       	rjmp	.+50     	; 0x8ce <vfprintf+0x112>
     89c:	8a e0       	ldi	r24, 0x0A	; 10
     89e:	58 9e       	mul	r5, r24
     8a0:	20 0d       	add	r18, r0
     8a2:	11 24       	eor	r1, r1
     8a4:	52 2e       	mov	r5, r18
     8a6:	e9 2d       	mov	r30, r9
     8a8:	e0 62       	ori	r30, 0x20	; 32
     8aa:	9e 2e       	mov	r9, r30
     8ac:	10 c0       	rjmp	.+32     	; 0x8ce <vfprintf+0x112>
     8ae:	8e 32       	cpi	r24, 0x2E	; 46
     8b0:	31 f4       	brne	.+12     	; 0x8be <vfprintf+0x102>
     8b2:	96 fc       	sbrc	r9, 6
     8b4:	cc c2       	rjmp	.+1432   	; 0xe4e <vfprintf+0x692>
     8b6:	f9 2d       	mov	r31, r9
     8b8:	f0 64       	ori	r31, 0x40	; 64
     8ba:	9f 2e       	mov	r9, r31
     8bc:	08 c0       	rjmp	.+16     	; 0x8ce <vfprintf+0x112>
     8be:	8c 36       	cpi	r24, 0x6C	; 108
     8c0:	21 f4       	brne	.+8      	; 0x8ca <vfprintf+0x10e>
     8c2:	29 2d       	mov	r18, r9
     8c4:	20 68       	ori	r18, 0x80	; 128
     8c6:	92 2e       	mov	r9, r18
     8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x112>
     8ca:	88 36       	cpi	r24, 0x68	; 104
     8cc:	41 f4       	brne	.+16     	; 0x8de <vfprintf+0x122>
     8ce:	f1 01       	movw	r30, r2
     8d0:	93 fd       	sbrc	r25, 3
     8d2:	85 91       	lpm	r24, Z+
     8d4:	93 ff       	sbrs	r25, 3
     8d6:	81 91       	ld	r24, Z+
     8d8:	1f 01       	movw	r2, r30
     8da:	81 11       	cpse	r24, r1
     8dc:	b3 cf       	rjmp	.-154    	; 0x844 <vfprintf+0x88>
     8de:	9b eb       	ldi	r25, 0xBB	; 187
     8e0:	98 0f       	add	r25, r24
     8e2:	93 30       	cpi	r25, 0x03	; 3
     8e4:	20 f4       	brcc	.+8      	; 0x8ee <vfprintf+0x132>
     8e6:	99 2d       	mov	r25, r9
     8e8:	90 61       	ori	r25, 0x10	; 16
     8ea:	80 5e       	subi	r24, 0xE0	; 224
     8ec:	07 c0       	rjmp	.+14     	; 0x8fc <vfprintf+0x140>
     8ee:	9b e9       	ldi	r25, 0x9B	; 155
     8f0:	98 0f       	add	r25, r24
     8f2:	93 30       	cpi	r25, 0x03	; 3
     8f4:	08 f0       	brcs	.+2      	; 0x8f8 <vfprintf+0x13c>
     8f6:	59 c1       	rjmp	.+690    	; 0xbaa <vfprintf+0x3ee>
     8f8:	99 2d       	mov	r25, r9
     8fa:	9f 7e       	andi	r25, 0xEF	; 239
     8fc:	96 ff       	sbrs	r25, 6
     8fe:	16 e0       	ldi	r17, 0x06	; 6
     900:	9f 73       	andi	r25, 0x3F	; 63
     902:	99 2e       	mov	r9, r25
     904:	85 36       	cpi	r24, 0x65	; 101
     906:	19 f4       	brne	.+6      	; 0x90e <vfprintf+0x152>
     908:	90 64       	ori	r25, 0x40	; 64
     90a:	99 2e       	mov	r9, r25
     90c:	08 c0       	rjmp	.+16     	; 0x91e <vfprintf+0x162>
     90e:	86 36       	cpi	r24, 0x66	; 102
     910:	21 f4       	brne	.+8      	; 0x91a <vfprintf+0x15e>
     912:	39 2f       	mov	r19, r25
     914:	30 68       	ori	r19, 0x80	; 128
     916:	93 2e       	mov	r9, r19
     918:	02 c0       	rjmp	.+4      	; 0x91e <vfprintf+0x162>
     91a:	11 11       	cpse	r17, r1
     91c:	11 50       	subi	r17, 0x01	; 1
     91e:	97 fe       	sbrs	r9, 7
     920:	07 c0       	rjmp	.+14     	; 0x930 <vfprintf+0x174>
     922:	1c 33       	cpi	r17, 0x3C	; 60
     924:	50 f4       	brcc	.+20     	; 0x93a <vfprintf+0x17e>
     926:	44 24       	eor	r4, r4
     928:	43 94       	inc	r4
     92a:	41 0e       	add	r4, r17
     92c:	27 e0       	ldi	r18, 0x07	; 7
     92e:	0b c0       	rjmp	.+22     	; 0x946 <vfprintf+0x18a>
     930:	18 30       	cpi	r17, 0x08	; 8
     932:	38 f0       	brcs	.+14     	; 0x942 <vfprintf+0x186>
     934:	27 e0       	ldi	r18, 0x07	; 7
     936:	17 e0       	ldi	r17, 0x07	; 7
     938:	05 c0       	rjmp	.+10     	; 0x944 <vfprintf+0x188>
     93a:	27 e0       	ldi	r18, 0x07	; 7
     93c:	9c e3       	ldi	r25, 0x3C	; 60
     93e:	49 2e       	mov	r4, r25
     940:	02 c0       	rjmp	.+4      	; 0x946 <vfprintf+0x18a>
     942:	21 2f       	mov	r18, r17
     944:	41 2c       	mov	r4, r1
     946:	56 01       	movw	r10, r12
     948:	84 e0       	ldi	r24, 0x04	; 4
     94a:	a8 0e       	add	r10, r24
     94c:	b1 1c       	adc	r11, r1
     94e:	f6 01       	movw	r30, r12
     950:	60 81       	ld	r22, Z
     952:	71 81       	ldd	r23, Z+1	; 0x01
     954:	82 81       	ldd	r24, Z+2	; 0x02
     956:	93 81       	ldd	r25, Z+3	; 0x03
     958:	04 2d       	mov	r16, r4
     95a:	a3 01       	movw	r20, r6
     95c:	b8 d2       	rcall	.+1392   	; 0xece <__ftoa_engine>
     95e:	6c 01       	movw	r12, r24
     960:	f9 81       	ldd	r31, Y+1	; 0x01
     962:	fc 87       	std	Y+12, r31	; 0x0c
     964:	f0 ff       	sbrs	r31, 0
     966:	02 c0       	rjmp	.+4      	; 0x96c <vfprintf+0x1b0>
     968:	f3 ff       	sbrs	r31, 3
     96a:	06 c0       	rjmp	.+12     	; 0x978 <vfprintf+0x1bc>
     96c:	91 fc       	sbrc	r9, 1
     96e:	06 c0       	rjmp	.+12     	; 0x97c <vfprintf+0x1c0>
     970:	92 fe       	sbrs	r9, 2
     972:	06 c0       	rjmp	.+12     	; 0x980 <vfprintf+0x1c4>
     974:	00 e2       	ldi	r16, 0x20	; 32
     976:	05 c0       	rjmp	.+10     	; 0x982 <vfprintf+0x1c6>
     978:	0d e2       	ldi	r16, 0x2D	; 45
     97a:	03 c0       	rjmp	.+6      	; 0x982 <vfprintf+0x1c6>
     97c:	0b e2       	ldi	r16, 0x2B	; 43
     97e:	01 c0       	rjmp	.+2      	; 0x982 <vfprintf+0x1c6>
     980:	00 e0       	ldi	r16, 0x00	; 0
     982:	8c 85       	ldd	r24, Y+12	; 0x0c
     984:	8c 70       	andi	r24, 0x0C	; 12
     986:	19 f0       	breq	.+6      	; 0x98e <vfprintf+0x1d2>
     988:	01 11       	cpse	r16, r1
     98a:	43 c2       	rjmp	.+1158   	; 0xe12 <vfprintf+0x656>
     98c:	80 c2       	rjmp	.+1280   	; 0xe8e <vfprintf+0x6d2>
     98e:	97 fe       	sbrs	r9, 7
     990:	10 c0       	rjmp	.+32     	; 0x9b2 <vfprintf+0x1f6>
     992:	4c 0c       	add	r4, r12
     994:	fc 85       	ldd	r31, Y+12	; 0x0c
     996:	f4 ff       	sbrs	r31, 4
     998:	04 c0       	rjmp	.+8      	; 0x9a2 <vfprintf+0x1e6>
     99a:	8a 81       	ldd	r24, Y+2	; 0x02
     99c:	81 33       	cpi	r24, 0x31	; 49
     99e:	09 f4       	brne	.+2      	; 0x9a2 <vfprintf+0x1e6>
     9a0:	4a 94       	dec	r4
     9a2:	14 14       	cp	r1, r4
     9a4:	74 f5       	brge	.+92     	; 0xa02 <vfprintf+0x246>
     9a6:	28 e0       	ldi	r18, 0x08	; 8
     9a8:	24 15       	cp	r18, r4
     9aa:	78 f5       	brcc	.+94     	; 0xa0a <vfprintf+0x24e>
     9ac:	88 e0       	ldi	r24, 0x08	; 8
     9ae:	48 2e       	mov	r4, r24
     9b0:	2c c0       	rjmp	.+88     	; 0xa0a <vfprintf+0x24e>
     9b2:	96 fc       	sbrc	r9, 6
     9b4:	2a c0       	rjmp	.+84     	; 0xa0a <vfprintf+0x24e>
     9b6:	81 2f       	mov	r24, r17
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	8c 15       	cp	r24, r12
     9bc:	9d 05       	cpc	r25, r13
     9be:	9c f0       	brlt	.+38     	; 0x9e6 <vfprintf+0x22a>
     9c0:	3c ef       	ldi	r19, 0xFC	; 252
     9c2:	c3 16       	cp	r12, r19
     9c4:	3f ef       	ldi	r19, 0xFF	; 255
     9c6:	d3 06       	cpc	r13, r19
     9c8:	74 f0       	brlt	.+28     	; 0x9e6 <vfprintf+0x22a>
     9ca:	89 2d       	mov	r24, r9
     9cc:	80 68       	ori	r24, 0x80	; 128
     9ce:	98 2e       	mov	r9, r24
     9d0:	0a c0       	rjmp	.+20     	; 0x9e6 <vfprintf+0x22a>
     9d2:	e2 e0       	ldi	r30, 0x02	; 2
     9d4:	f0 e0       	ldi	r31, 0x00	; 0
     9d6:	ec 0f       	add	r30, r28
     9d8:	fd 1f       	adc	r31, r29
     9da:	e1 0f       	add	r30, r17
     9dc:	f1 1d       	adc	r31, r1
     9de:	80 81       	ld	r24, Z
     9e0:	80 33       	cpi	r24, 0x30	; 48
     9e2:	19 f4       	brne	.+6      	; 0x9ea <vfprintf+0x22e>
     9e4:	11 50       	subi	r17, 0x01	; 1
     9e6:	11 11       	cpse	r17, r1
     9e8:	f4 cf       	rjmp	.-24     	; 0x9d2 <vfprintf+0x216>
     9ea:	97 fe       	sbrs	r9, 7
     9ec:	0e c0       	rjmp	.+28     	; 0xa0a <vfprintf+0x24e>
     9ee:	44 24       	eor	r4, r4
     9f0:	43 94       	inc	r4
     9f2:	41 0e       	add	r4, r17
     9f4:	81 2f       	mov	r24, r17
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	c8 16       	cp	r12, r24
     9fa:	d9 06       	cpc	r13, r25
     9fc:	2c f4       	brge	.+10     	; 0xa08 <vfprintf+0x24c>
     9fe:	1c 19       	sub	r17, r12
     a00:	04 c0       	rjmp	.+8      	; 0xa0a <vfprintf+0x24e>
     a02:	44 24       	eor	r4, r4
     a04:	43 94       	inc	r4
     a06:	01 c0       	rjmp	.+2      	; 0xa0a <vfprintf+0x24e>
     a08:	10 e0       	ldi	r17, 0x00	; 0
     a0a:	97 fe       	sbrs	r9, 7
     a0c:	06 c0       	rjmp	.+12     	; 0xa1a <vfprintf+0x25e>
     a0e:	1c 14       	cp	r1, r12
     a10:	1d 04       	cpc	r1, r13
     a12:	34 f4       	brge	.+12     	; 0xa20 <vfprintf+0x264>
     a14:	c6 01       	movw	r24, r12
     a16:	01 96       	adiw	r24, 0x01	; 1
     a18:	05 c0       	rjmp	.+10     	; 0xa24 <vfprintf+0x268>
     a1a:	85 e0       	ldi	r24, 0x05	; 5
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <vfprintf+0x268>
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	01 11       	cpse	r16, r1
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	11 23       	and	r17, r17
     a2a:	31 f0       	breq	.+12     	; 0xa38 <vfprintf+0x27c>
     a2c:	21 2f       	mov	r18, r17
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	2f 5f       	subi	r18, 0xFF	; 255
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	82 0f       	add	r24, r18
     a36:	93 1f       	adc	r25, r19
     a38:	25 2d       	mov	r18, r5
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	82 17       	cp	r24, r18
     a3e:	93 07       	cpc	r25, r19
     a40:	14 f4       	brge	.+4      	; 0xa46 <vfprintf+0x28a>
     a42:	58 1a       	sub	r5, r24
     a44:	01 c0       	rjmp	.+2      	; 0xa48 <vfprintf+0x28c>
     a46:	51 2c       	mov	r5, r1
     a48:	89 2d       	mov	r24, r9
     a4a:	89 70       	andi	r24, 0x09	; 9
     a4c:	41 f4       	brne	.+16     	; 0xa5e <vfprintf+0x2a2>
     a4e:	55 20       	and	r5, r5
     a50:	31 f0       	breq	.+12     	; 0xa5e <vfprintf+0x2a2>
     a52:	b7 01       	movw	r22, r14
     a54:	80 e2       	ldi	r24, 0x20	; 32
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	28 d3       	rcall	.+1616   	; 0x10aa <fputc>
     a5a:	5a 94       	dec	r5
     a5c:	f8 cf       	rjmp	.-16     	; 0xa4e <vfprintf+0x292>
     a5e:	00 23       	and	r16, r16
     a60:	21 f0       	breq	.+8      	; 0xa6a <vfprintf+0x2ae>
     a62:	b7 01       	movw	r22, r14
     a64:	80 2f       	mov	r24, r16
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	20 d3       	rcall	.+1600   	; 0x10aa <fputc>
     a6a:	93 fc       	sbrc	r9, 3
     a6c:	08 c0       	rjmp	.+16     	; 0xa7e <vfprintf+0x2c2>
     a6e:	55 20       	and	r5, r5
     a70:	31 f0       	breq	.+12     	; 0xa7e <vfprintf+0x2c2>
     a72:	b7 01       	movw	r22, r14
     a74:	80 e3       	ldi	r24, 0x30	; 48
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	18 d3       	rcall	.+1584   	; 0x10aa <fputc>
     a7a:	5a 94       	dec	r5
     a7c:	f8 cf       	rjmp	.-16     	; 0xa6e <vfprintf+0x2b2>
     a7e:	97 fe       	sbrs	r9, 7
     a80:	4a c0       	rjmp	.+148    	; 0xb16 <vfprintf+0x35a>
     a82:	46 01       	movw	r8, r12
     a84:	d7 fe       	sbrs	r13, 7
     a86:	02 c0       	rjmp	.+4      	; 0xa8c <vfprintf+0x2d0>
     a88:	81 2c       	mov	r8, r1
     a8a:	91 2c       	mov	r9, r1
     a8c:	c6 01       	movw	r24, r12
     a8e:	88 19       	sub	r24, r8
     a90:	99 09       	sbc	r25, r9
     a92:	f3 01       	movw	r30, r6
     a94:	e8 0f       	add	r30, r24
     a96:	f9 1f       	adc	r31, r25
     a98:	fe 87       	std	Y+14, r31	; 0x0e
     a9a:	ed 87       	std	Y+13, r30	; 0x0d
     a9c:	96 01       	movw	r18, r12
     a9e:	24 19       	sub	r18, r4
     aa0:	31 09       	sbc	r19, r1
     aa2:	38 8b       	std	Y+16, r19	; 0x10
     aa4:	2f 87       	std	Y+15, r18	; 0x0f
     aa6:	01 2f       	mov	r16, r17
     aa8:	10 e0       	ldi	r17, 0x00	; 0
     aaa:	11 95       	neg	r17
     aac:	01 95       	neg	r16
     aae:	11 09       	sbc	r17, r1
     ab0:	3f ef       	ldi	r19, 0xFF	; 255
     ab2:	83 16       	cp	r8, r19
     ab4:	93 06       	cpc	r9, r19
     ab6:	21 f4       	brne	.+8      	; 0xac0 <vfprintf+0x304>
     ab8:	b7 01       	movw	r22, r14
     aba:	8e e2       	ldi	r24, 0x2E	; 46
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	f5 d2       	rcall	.+1514   	; 0x10aa <fputc>
     ac0:	c8 14       	cp	r12, r8
     ac2:	d9 04       	cpc	r13, r9
     ac4:	4c f0       	brlt	.+18     	; 0xad8 <vfprintf+0x31c>
     ac6:	8f 85       	ldd	r24, Y+15	; 0x0f
     ac8:	98 89       	ldd	r25, Y+16	; 0x10
     aca:	88 15       	cp	r24, r8
     acc:	99 05       	cpc	r25, r9
     ace:	24 f4       	brge	.+8      	; 0xad8 <vfprintf+0x31c>
     ad0:	ed 85       	ldd	r30, Y+13	; 0x0d
     ad2:	fe 85       	ldd	r31, Y+14	; 0x0e
     ad4:	81 81       	ldd	r24, Z+1	; 0x01
     ad6:	01 c0       	rjmp	.+2      	; 0xada <vfprintf+0x31e>
     ad8:	80 e3       	ldi	r24, 0x30	; 48
     ada:	f1 e0       	ldi	r31, 0x01	; 1
     adc:	8f 1a       	sub	r8, r31
     ade:	91 08       	sbc	r9, r1
     ae0:	2d 85       	ldd	r18, Y+13	; 0x0d
     ae2:	3e 85       	ldd	r19, Y+14	; 0x0e
     ae4:	2f 5f       	subi	r18, 0xFF	; 255
     ae6:	3f 4f       	sbci	r19, 0xFF	; 255
     ae8:	3e 87       	std	Y+14, r19	; 0x0e
     aea:	2d 87       	std	Y+13, r18	; 0x0d
     aec:	80 16       	cp	r8, r16
     aee:	91 06       	cpc	r9, r17
     af0:	24 f0       	brlt	.+8      	; 0xafa <vfprintf+0x33e>
     af2:	b7 01       	movw	r22, r14
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	d9 d2       	rcall	.+1458   	; 0x10aa <fputc>
     af8:	db cf       	rjmp	.-74     	; 0xab0 <vfprintf+0x2f4>
     afa:	c8 14       	cp	r12, r8
     afc:	d9 04       	cpc	r13, r9
     afe:	41 f4       	brne	.+16     	; 0xb10 <vfprintf+0x354>
     b00:	9a 81       	ldd	r25, Y+2	; 0x02
     b02:	96 33       	cpi	r25, 0x36	; 54
     b04:	20 f4       	brcc	.+8      	; 0xb0e <vfprintf+0x352>
     b06:	95 33       	cpi	r25, 0x35	; 53
     b08:	19 f4       	brne	.+6      	; 0xb10 <vfprintf+0x354>
     b0a:	3c 85       	ldd	r19, Y+12	; 0x0c
     b0c:	34 ff       	sbrs	r19, 4
     b0e:	81 e3       	ldi	r24, 0x31	; 49
     b10:	b7 01       	movw	r22, r14
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	48 c0       	rjmp	.+144    	; 0xba6 <vfprintf+0x3ea>
     b16:	8a 81       	ldd	r24, Y+2	; 0x02
     b18:	81 33       	cpi	r24, 0x31	; 49
     b1a:	19 f0       	breq	.+6      	; 0xb22 <vfprintf+0x366>
     b1c:	9c 85       	ldd	r25, Y+12	; 0x0c
     b1e:	9f 7e       	andi	r25, 0xEF	; 239
     b20:	9c 87       	std	Y+12, r25	; 0x0c
     b22:	b7 01       	movw	r22, r14
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	c1 d2       	rcall	.+1410   	; 0x10aa <fputc>
     b28:	11 11       	cpse	r17, r1
     b2a:	05 c0       	rjmp	.+10     	; 0xb36 <vfprintf+0x37a>
     b2c:	94 fc       	sbrc	r9, 4
     b2e:	16 c0       	rjmp	.+44     	; 0xb5c <vfprintf+0x3a0>
     b30:	85 e6       	ldi	r24, 0x65	; 101
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	15 c0       	rjmp	.+42     	; 0xb60 <vfprintf+0x3a4>
     b36:	b7 01       	movw	r22, r14
     b38:	8e e2       	ldi	r24, 0x2E	; 46
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	b6 d2       	rcall	.+1388   	; 0x10aa <fputc>
     b3e:	1e 5f       	subi	r17, 0xFE	; 254
     b40:	82 e0       	ldi	r24, 0x02	; 2
     b42:	01 e0       	ldi	r16, 0x01	; 1
     b44:	08 0f       	add	r16, r24
     b46:	f3 01       	movw	r30, r6
     b48:	e8 0f       	add	r30, r24
     b4a:	f1 1d       	adc	r31, r1
     b4c:	80 81       	ld	r24, Z
     b4e:	b7 01       	movw	r22, r14
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	ab d2       	rcall	.+1366   	; 0x10aa <fputc>
     b54:	80 2f       	mov	r24, r16
     b56:	01 13       	cpse	r16, r17
     b58:	f4 cf       	rjmp	.-24     	; 0xb42 <vfprintf+0x386>
     b5a:	e8 cf       	rjmp	.-48     	; 0xb2c <vfprintf+0x370>
     b5c:	85 e4       	ldi	r24, 0x45	; 69
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	b7 01       	movw	r22, r14
     b62:	a3 d2       	rcall	.+1350   	; 0x10aa <fputc>
     b64:	d7 fc       	sbrc	r13, 7
     b66:	06 c0       	rjmp	.+12     	; 0xb74 <vfprintf+0x3b8>
     b68:	c1 14       	cp	r12, r1
     b6a:	d1 04       	cpc	r13, r1
     b6c:	41 f4       	brne	.+16     	; 0xb7e <vfprintf+0x3c2>
     b6e:	ec 85       	ldd	r30, Y+12	; 0x0c
     b70:	e4 ff       	sbrs	r30, 4
     b72:	05 c0       	rjmp	.+10     	; 0xb7e <vfprintf+0x3c2>
     b74:	d1 94       	neg	r13
     b76:	c1 94       	neg	r12
     b78:	d1 08       	sbc	r13, r1
     b7a:	8d e2       	ldi	r24, 0x2D	; 45
     b7c:	01 c0       	rjmp	.+2      	; 0xb80 <vfprintf+0x3c4>
     b7e:	8b e2       	ldi	r24, 0x2B	; 43
     b80:	b7 01       	movw	r22, r14
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	92 d2       	rcall	.+1316   	; 0x10aa <fputc>
     b86:	80 e3       	ldi	r24, 0x30	; 48
     b88:	2a e0       	ldi	r18, 0x0A	; 10
     b8a:	c2 16       	cp	r12, r18
     b8c:	d1 04       	cpc	r13, r1
     b8e:	2c f0       	brlt	.+10     	; 0xb9a <vfprintf+0x3de>
     b90:	8f 5f       	subi	r24, 0xFF	; 255
     b92:	fa e0       	ldi	r31, 0x0A	; 10
     b94:	cf 1a       	sub	r12, r31
     b96:	d1 08       	sbc	r13, r1
     b98:	f7 cf       	rjmp	.-18     	; 0xb88 <vfprintf+0x3cc>
     b9a:	b7 01       	movw	r22, r14
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	85 d2       	rcall	.+1290   	; 0x10aa <fputc>
     ba0:	b7 01       	movw	r22, r14
     ba2:	c6 01       	movw	r24, r12
     ba4:	c0 96       	adiw	r24, 0x30	; 48
     ba6:	81 d2       	rcall	.+1282   	; 0x10aa <fputc>
     ba8:	49 c1       	rjmp	.+658    	; 0xe3c <vfprintf+0x680>
     baa:	83 36       	cpi	r24, 0x63	; 99
     bac:	31 f0       	breq	.+12     	; 0xbba <vfprintf+0x3fe>
     bae:	83 37       	cpi	r24, 0x73	; 115
     bb0:	79 f0       	breq	.+30     	; 0xbd0 <vfprintf+0x414>
     bb2:	83 35       	cpi	r24, 0x53	; 83
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <vfprintf+0x3fc>
     bb6:	52 c0       	rjmp	.+164    	; 0xc5c <vfprintf+0x4a0>
     bb8:	1f c0       	rjmp	.+62     	; 0xbf8 <vfprintf+0x43c>
     bba:	56 01       	movw	r10, r12
     bbc:	32 e0       	ldi	r19, 0x02	; 2
     bbe:	a3 0e       	add	r10, r19
     bc0:	b1 1c       	adc	r11, r1
     bc2:	f6 01       	movw	r30, r12
     bc4:	80 81       	ld	r24, Z
     bc6:	89 83       	std	Y+1, r24	; 0x01
     bc8:	01 e0       	ldi	r16, 0x01	; 1
     bca:	10 e0       	ldi	r17, 0x00	; 0
     bcc:	63 01       	movw	r12, r6
     bce:	11 c0       	rjmp	.+34     	; 0xbf2 <vfprintf+0x436>
     bd0:	56 01       	movw	r10, r12
     bd2:	f2 e0       	ldi	r31, 0x02	; 2
     bd4:	af 0e       	add	r10, r31
     bd6:	b1 1c       	adc	r11, r1
     bd8:	f6 01       	movw	r30, r12
     bda:	c0 80       	ld	r12, Z
     bdc:	d1 80       	ldd	r13, Z+1	; 0x01
     bde:	96 fe       	sbrs	r9, 6
     be0:	03 c0       	rjmp	.+6      	; 0xbe8 <vfprintf+0x42c>
     be2:	61 2f       	mov	r22, r17
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	02 c0       	rjmp	.+4      	; 0xbec <vfprintf+0x430>
     be8:	6f ef       	ldi	r22, 0xFF	; 255
     bea:	7f ef       	ldi	r23, 0xFF	; 255
     bec:	c6 01       	movw	r24, r12
     bee:	52 d2       	rcall	.+1188   	; 0x1094 <strnlen>
     bf0:	8c 01       	movw	r16, r24
     bf2:	f9 2d       	mov	r31, r9
     bf4:	ff 77       	andi	r31, 0x7F	; 127
     bf6:	13 c0       	rjmp	.+38     	; 0xc1e <vfprintf+0x462>
     bf8:	56 01       	movw	r10, r12
     bfa:	22 e0       	ldi	r18, 0x02	; 2
     bfc:	a2 0e       	add	r10, r18
     bfe:	b1 1c       	adc	r11, r1
     c00:	f6 01       	movw	r30, r12
     c02:	c0 80       	ld	r12, Z
     c04:	d1 80       	ldd	r13, Z+1	; 0x01
     c06:	96 fe       	sbrs	r9, 6
     c08:	03 c0       	rjmp	.+6      	; 0xc10 <vfprintf+0x454>
     c0a:	61 2f       	mov	r22, r17
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <vfprintf+0x458>
     c10:	6f ef       	ldi	r22, 0xFF	; 255
     c12:	7f ef       	ldi	r23, 0xFF	; 255
     c14:	c6 01       	movw	r24, r12
     c16:	33 d2       	rcall	.+1126   	; 0x107e <strnlen_P>
     c18:	8c 01       	movw	r16, r24
     c1a:	f9 2d       	mov	r31, r9
     c1c:	f0 68       	ori	r31, 0x80	; 128
     c1e:	9f 2e       	mov	r9, r31
     c20:	f3 fd       	sbrc	r31, 3
     c22:	18 c0       	rjmp	.+48     	; 0xc54 <vfprintf+0x498>
     c24:	85 2d       	mov	r24, r5
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	08 17       	cp	r16, r24
     c2a:	19 07       	cpc	r17, r25
     c2c:	98 f4       	brcc	.+38     	; 0xc54 <vfprintf+0x498>
     c2e:	b7 01       	movw	r22, r14
     c30:	80 e2       	ldi	r24, 0x20	; 32
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	3a d2       	rcall	.+1140   	; 0x10aa <fputc>
     c36:	5a 94       	dec	r5
     c38:	f5 cf       	rjmp	.-22     	; 0xc24 <vfprintf+0x468>
     c3a:	f6 01       	movw	r30, r12
     c3c:	97 fc       	sbrc	r9, 7
     c3e:	85 91       	lpm	r24, Z+
     c40:	97 fe       	sbrs	r9, 7
     c42:	81 91       	ld	r24, Z+
     c44:	6f 01       	movw	r12, r30
     c46:	b7 01       	movw	r22, r14
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	2f d2       	rcall	.+1118   	; 0x10aa <fputc>
     c4c:	51 10       	cpse	r5, r1
     c4e:	5a 94       	dec	r5
     c50:	01 50       	subi	r16, 0x01	; 1
     c52:	11 09       	sbc	r17, r1
     c54:	01 15       	cp	r16, r1
     c56:	11 05       	cpc	r17, r1
     c58:	81 f7       	brne	.-32     	; 0xc3a <vfprintf+0x47e>
     c5a:	f0 c0       	rjmp	.+480    	; 0xe3c <vfprintf+0x680>
     c5c:	84 36       	cpi	r24, 0x64	; 100
     c5e:	11 f0       	breq	.+4      	; 0xc64 <vfprintf+0x4a8>
     c60:	89 36       	cpi	r24, 0x69	; 105
     c62:	59 f5       	brne	.+86     	; 0xcba <vfprintf+0x4fe>
     c64:	56 01       	movw	r10, r12
     c66:	97 fe       	sbrs	r9, 7
     c68:	09 c0       	rjmp	.+18     	; 0xc7c <vfprintf+0x4c0>
     c6a:	24 e0       	ldi	r18, 0x04	; 4
     c6c:	a2 0e       	add	r10, r18
     c6e:	b1 1c       	adc	r11, r1
     c70:	f6 01       	movw	r30, r12
     c72:	60 81       	ld	r22, Z
     c74:	71 81       	ldd	r23, Z+1	; 0x01
     c76:	82 81       	ldd	r24, Z+2	; 0x02
     c78:	93 81       	ldd	r25, Z+3	; 0x03
     c7a:	0a c0       	rjmp	.+20     	; 0xc90 <vfprintf+0x4d4>
     c7c:	f2 e0       	ldi	r31, 0x02	; 2
     c7e:	af 0e       	add	r10, r31
     c80:	b1 1c       	adc	r11, r1
     c82:	f6 01       	movw	r30, r12
     c84:	60 81       	ld	r22, Z
     c86:	71 81       	ldd	r23, Z+1	; 0x01
     c88:	07 2e       	mov	r0, r23
     c8a:	00 0c       	add	r0, r0
     c8c:	88 0b       	sbc	r24, r24
     c8e:	99 0b       	sbc	r25, r25
     c90:	f9 2d       	mov	r31, r9
     c92:	ff 76       	andi	r31, 0x6F	; 111
     c94:	9f 2e       	mov	r9, r31
     c96:	97 ff       	sbrs	r25, 7
     c98:	09 c0       	rjmp	.+18     	; 0xcac <vfprintf+0x4f0>
     c9a:	90 95       	com	r25
     c9c:	80 95       	com	r24
     c9e:	70 95       	com	r23
     ca0:	61 95       	neg	r22
     ca2:	7f 4f       	sbci	r23, 0xFF	; 255
     ca4:	8f 4f       	sbci	r24, 0xFF	; 255
     ca6:	9f 4f       	sbci	r25, 0xFF	; 255
     ca8:	f0 68       	ori	r31, 0x80	; 128
     caa:	9f 2e       	mov	r9, r31
     cac:	2a e0       	ldi	r18, 0x0A	; 10
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	a3 01       	movw	r20, r6
     cb2:	65 d2       	rcall	.+1226   	; 0x117e <__ultoa_invert>
     cb4:	c8 2e       	mov	r12, r24
     cb6:	c6 18       	sub	r12, r6
     cb8:	3e c0       	rjmp	.+124    	; 0xd36 <vfprintf+0x57a>
     cba:	09 2d       	mov	r16, r9
     cbc:	85 37       	cpi	r24, 0x75	; 117
     cbe:	21 f4       	brne	.+8      	; 0xcc8 <vfprintf+0x50c>
     cc0:	0f 7e       	andi	r16, 0xEF	; 239
     cc2:	2a e0       	ldi	r18, 0x0A	; 10
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	1d c0       	rjmp	.+58     	; 0xd02 <vfprintf+0x546>
     cc8:	09 7f       	andi	r16, 0xF9	; 249
     cca:	8f 36       	cpi	r24, 0x6F	; 111
     ccc:	91 f0       	breq	.+36     	; 0xcf2 <vfprintf+0x536>
     cce:	18 f4       	brcc	.+6      	; 0xcd6 <vfprintf+0x51a>
     cd0:	88 35       	cpi	r24, 0x58	; 88
     cd2:	59 f0       	breq	.+22     	; 0xcea <vfprintf+0x52e>
     cd4:	bc c0       	rjmp	.+376    	; 0xe4e <vfprintf+0x692>
     cd6:	80 37       	cpi	r24, 0x70	; 112
     cd8:	19 f0       	breq	.+6      	; 0xce0 <vfprintf+0x524>
     cda:	88 37       	cpi	r24, 0x78	; 120
     cdc:	11 f0       	breq	.+4      	; 0xce2 <vfprintf+0x526>
     cde:	b7 c0       	rjmp	.+366    	; 0xe4e <vfprintf+0x692>
     ce0:	00 61       	ori	r16, 0x10	; 16
     ce2:	04 ff       	sbrs	r16, 4
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <vfprintf+0x53c>
     ce6:	04 60       	ori	r16, 0x04	; 4
     ce8:	07 c0       	rjmp	.+14     	; 0xcf8 <vfprintf+0x53c>
     cea:	94 fe       	sbrs	r9, 4
     cec:	08 c0       	rjmp	.+16     	; 0xcfe <vfprintf+0x542>
     cee:	06 60       	ori	r16, 0x06	; 6
     cf0:	06 c0       	rjmp	.+12     	; 0xcfe <vfprintf+0x542>
     cf2:	28 e0       	ldi	r18, 0x08	; 8
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	05 c0       	rjmp	.+10     	; 0xd02 <vfprintf+0x546>
     cf8:	20 e1       	ldi	r18, 0x10	; 16
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x546>
     cfe:	20 e1       	ldi	r18, 0x10	; 16
     d00:	32 e0       	ldi	r19, 0x02	; 2
     d02:	56 01       	movw	r10, r12
     d04:	07 ff       	sbrs	r16, 7
     d06:	09 c0       	rjmp	.+18     	; 0xd1a <vfprintf+0x55e>
     d08:	84 e0       	ldi	r24, 0x04	; 4
     d0a:	a8 0e       	add	r10, r24
     d0c:	b1 1c       	adc	r11, r1
     d0e:	f6 01       	movw	r30, r12
     d10:	60 81       	ld	r22, Z
     d12:	71 81       	ldd	r23, Z+1	; 0x01
     d14:	82 81       	ldd	r24, Z+2	; 0x02
     d16:	93 81       	ldd	r25, Z+3	; 0x03
     d18:	08 c0       	rjmp	.+16     	; 0xd2a <vfprintf+0x56e>
     d1a:	f2 e0       	ldi	r31, 0x02	; 2
     d1c:	af 0e       	add	r10, r31
     d1e:	b1 1c       	adc	r11, r1
     d20:	f6 01       	movw	r30, r12
     d22:	60 81       	ld	r22, Z
     d24:	71 81       	ldd	r23, Z+1	; 0x01
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	a3 01       	movw	r20, r6
     d2c:	28 d2       	rcall	.+1104   	; 0x117e <__ultoa_invert>
     d2e:	c8 2e       	mov	r12, r24
     d30:	c6 18       	sub	r12, r6
     d32:	0f 77       	andi	r16, 0x7F	; 127
     d34:	90 2e       	mov	r9, r16
     d36:	96 fe       	sbrs	r9, 6
     d38:	0b c0       	rjmp	.+22     	; 0xd50 <vfprintf+0x594>
     d3a:	09 2d       	mov	r16, r9
     d3c:	0e 7f       	andi	r16, 0xFE	; 254
     d3e:	c1 16       	cp	r12, r17
     d40:	50 f4       	brcc	.+20     	; 0xd56 <vfprintf+0x59a>
     d42:	94 fe       	sbrs	r9, 4
     d44:	0a c0       	rjmp	.+20     	; 0xd5a <vfprintf+0x59e>
     d46:	92 fc       	sbrc	r9, 2
     d48:	08 c0       	rjmp	.+16     	; 0xd5a <vfprintf+0x59e>
     d4a:	09 2d       	mov	r16, r9
     d4c:	0e 7e       	andi	r16, 0xEE	; 238
     d4e:	05 c0       	rjmp	.+10     	; 0xd5a <vfprintf+0x59e>
     d50:	dc 2c       	mov	r13, r12
     d52:	09 2d       	mov	r16, r9
     d54:	03 c0       	rjmp	.+6      	; 0xd5c <vfprintf+0x5a0>
     d56:	dc 2c       	mov	r13, r12
     d58:	01 c0       	rjmp	.+2      	; 0xd5c <vfprintf+0x5a0>
     d5a:	d1 2e       	mov	r13, r17
     d5c:	04 ff       	sbrs	r16, 4
     d5e:	0d c0       	rjmp	.+26     	; 0xd7a <vfprintf+0x5be>
     d60:	fe 01       	movw	r30, r28
     d62:	ec 0d       	add	r30, r12
     d64:	f1 1d       	adc	r31, r1
     d66:	80 81       	ld	r24, Z
     d68:	80 33       	cpi	r24, 0x30	; 48
     d6a:	11 f4       	brne	.+4      	; 0xd70 <vfprintf+0x5b4>
     d6c:	09 7e       	andi	r16, 0xE9	; 233
     d6e:	09 c0       	rjmp	.+18     	; 0xd82 <vfprintf+0x5c6>
     d70:	02 ff       	sbrs	r16, 2
     d72:	06 c0       	rjmp	.+12     	; 0xd80 <vfprintf+0x5c4>
     d74:	d3 94       	inc	r13
     d76:	d3 94       	inc	r13
     d78:	04 c0       	rjmp	.+8      	; 0xd82 <vfprintf+0x5c6>
     d7a:	80 2f       	mov	r24, r16
     d7c:	86 78       	andi	r24, 0x86	; 134
     d7e:	09 f0       	breq	.+2      	; 0xd82 <vfprintf+0x5c6>
     d80:	d3 94       	inc	r13
     d82:	03 fd       	sbrc	r16, 3
     d84:	10 c0       	rjmp	.+32     	; 0xda6 <vfprintf+0x5ea>
     d86:	00 ff       	sbrs	r16, 0
     d88:	06 c0       	rjmp	.+12     	; 0xd96 <vfprintf+0x5da>
     d8a:	1c 2d       	mov	r17, r12
     d8c:	d5 14       	cp	r13, r5
     d8e:	78 f4       	brcc	.+30     	; 0xdae <vfprintf+0x5f2>
     d90:	15 0d       	add	r17, r5
     d92:	1d 19       	sub	r17, r13
     d94:	0c c0       	rjmp	.+24     	; 0xdae <vfprintf+0x5f2>
     d96:	d5 14       	cp	r13, r5
     d98:	50 f4       	brcc	.+20     	; 0xdae <vfprintf+0x5f2>
     d9a:	b7 01       	movw	r22, r14
     d9c:	80 e2       	ldi	r24, 0x20	; 32
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	84 d1       	rcall	.+776    	; 0x10aa <fputc>
     da2:	d3 94       	inc	r13
     da4:	f8 cf       	rjmp	.-16     	; 0xd96 <vfprintf+0x5da>
     da6:	d5 14       	cp	r13, r5
     da8:	10 f4       	brcc	.+4      	; 0xdae <vfprintf+0x5f2>
     daa:	5d 18       	sub	r5, r13
     dac:	01 c0       	rjmp	.+2      	; 0xdb0 <vfprintf+0x5f4>
     dae:	51 2c       	mov	r5, r1
     db0:	04 ff       	sbrs	r16, 4
     db2:	0f c0       	rjmp	.+30     	; 0xdd2 <vfprintf+0x616>
     db4:	b7 01       	movw	r22, r14
     db6:	80 e3       	ldi	r24, 0x30	; 48
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	77 d1       	rcall	.+750    	; 0x10aa <fputc>
     dbc:	02 ff       	sbrs	r16, 2
     dbe:	16 c0       	rjmp	.+44     	; 0xdec <vfprintf+0x630>
     dc0:	01 fd       	sbrc	r16, 1
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <vfprintf+0x60e>
     dc4:	88 e7       	ldi	r24, 0x78	; 120
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <vfprintf+0x612>
     dca:	88 e5       	ldi	r24, 0x58	; 88
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	b7 01       	movw	r22, r14
     dd0:	0c c0       	rjmp	.+24     	; 0xdea <vfprintf+0x62e>
     dd2:	80 2f       	mov	r24, r16
     dd4:	86 78       	andi	r24, 0x86	; 134
     dd6:	51 f0       	breq	.+20     	; 0xdec <vfprintf+0x630>
     dd8:	01 ff       	sbrs	r16, 1
     dda:	02 c0       	rjmp	.+4      	; 0xde0 <vfprintf+0x624>
     ddc:	8b e2       	ldi	r24, 0x2B	; 43
     dde:	01 c0       	rjmp	.+2      	; 0xde2 <vfprintf+0x626>
     de0:	80 e2       	ldi	r24, 0x20	; 32
     de2:	07 fd       	sbrc	r16, 7
     de4:	8d e2       	ldi	r24, 0x2D	; 45
     de6:	b7 01       	movw	r22, r14
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	5f d1       	rcall	.+702    	; 0x10aa <fputc>
     dec:	c1 16       	cp	r12, r17
     dee:	30 f4       	brcc	.+12     	; 0xdfc <vfprintf+0x640>
     df0:	b7 01       	movw	r22, r14
     df2:	80 e3       	ldi	r24, 0x30	; 48
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	59 d1       	rcall	.+690    	; 0x10aa <fputc>
     df8:	11 50       	subi	r17, 0x01	; 1
     dfa:	f8 cf       	rjmp	.-16     	; 0xdec <vfprintf+0x630>
     dfc:	ca 94       	dec	r12
     dfe:	f3 01       	movw	r30, r6
     e00:	ec 0d       	add	r30, r12
     e02:	f1 1d       	adc	r31, r1
     e04:	80 81       	ld	r24, Z
     e06:	b7 01       	movw	r22, r14
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	4f d1       	rcall	.+670    	; 0x10aa <fputc>
     e0c:	c1 10       	cpse	r12, r1
     e0e:	f6 cf       	rjmp	.-20     	; 0xdfc <vfprintf+0x640>
     e10:	15 c0       	rjmp	.+42     	; 0xe3c <vfprintf+0x680>
     e12:	f4 e0       	ldi	r31, 0x04	; 4
     e14:	f5 15       	cp	r31, r5
     e16:	50 f5       	brcc	.+84     	; 0xe6c <vfprintf+0x6b0>
     e18:	84 e0       	ldi	r24, 0x04	; 4
     e1a:	58 1a       	sub	r5, r24
     e1c:	93 fe       	sbrs	r9, 3
     e1e:	1e c0       	rjmp	.+60     	; 0xe5c <vfprintf+0x6a0>
     e20:	01 11       	cpse	r16, r1
     e22:	25 c0       	rjmp	.+74     	; 0xe6e <vfprintf+0x6b2>
     e24:	2c 85       	ldd	r18, Y+12	; 0x0c
     e26:	23 ff       	sbrs	r18, 3
     e28:	27 c0       	rjmp	.+78     	; 0xe78 <vfprintf+0x6bc>
     e2a:	04 ee       	ldi	r16, 0xE4	; 228
     e2c:	10 e0       	ldi	r17, 0x00	; 0
     e2e:	39 2d       	mov	r19, r9
     e30:	30 71       	andi	r19, 0x10	; 16
     e32:	93 2e       	mov	r9, r19
     e34:	f8 01       	movw	r30, r16
     e36:	84 91       	lpm	r24, Z
     e38:	81 11       	cpse	r24, r1
     e3a:	21 c0       	rjmp	.+66     	; 0xe7e <vfprintf+0x6c2>
     e3c:	55 20       	and	r5, r5
     e3e:	09 f4       	brne	.+2      	; 0xe42 <vfprintf+0x686>
     e40:	fc cc       	rjmp	.-1544   	; 0x83a <vfprintf+0x7e>
     e42:	b7 01       	movw	r22, r14
     e44:	80 e2       	ldi	r24, 0x20	; 32
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	30 d1       	rcall	.+608    	; 0x10aa <fputc>
     e4a:	5a 94       	dec	r5
     e4c:	f7 cf       	rjmp	.-18     	; 0xe3c <vfprintf+0x680>
     e4e:	f7 01       	movw	r30, r14
     e50:	86 81       	ldd	r24, Z+6	; 0x06
     e52:	97 81       	ldd	r25, Z+7	; 0x07
     e54:	23 c0       	rjmp	.+70     	; 0xe9c <vfprintf+0x6e0>
     e56:	8f ef       	ldi	r24, 0xFF	; 255
     e58:	9f ef       	ldi	r25, 0xFF	; 255
     e5a:	20 c0       	rjmp	.+64     	; 0xe9c <vfprintf+0x6e0>
     e5c:	b7 01       	movw	r22, r14
     e5e:	80 e2       	ldi	r24, 0x20	; 32
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	23 d1       	rcall	.+582    	; 0x10aa <fputc>
     e64:	5a 94       	dec	r5
     e66:	51 10       	cpse	r5, r1
     e68:	f9 cf       	rjmp	.-14     	; 0xe5c <vfprintf+0x6a0>
     e6a:	da cf       	rjmp	.-76     	; 0xe20 <vfprintf+0x664>
     e6c:	51 2c       	mov	r5, r1
     e6e:	b7 01       	movw	r22, r14
     e70:	80 2f       	mov	r24, r16
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	1a d1       	rcall	.+564    	; 0x10aa <fputc>
     e76:	d6 cf       	rjmp	.-84     	; 0xe24 <vfprintf+0x668>
     e78:	08 ee       	ldi	r16, 0xE8	; 232
     e7a:	10 e0       	ldi	r17, 0x00	; 0
     e7c:	d8 cf       	rjmp	.-80     	; 0xe2e <vfprintf+0x672>
     e7e:	91 10       	cpse	r9, r1
     e80:	80 52       	subi	r24, 0x20	; 32
     e82:	b7 01       	movw	r22, r14
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	11 d1       	rcall	.+546    	; 0x10aa <fputc>
     e88:	0f 5f       	subi	r16, 0xFF	; 255
     e8a:	1f 4f       	sbci	r17, 0xFF	; 255
     e8c:	d3 cf       	rjmp	.-90     	; 0xe34 <vfprintf+0x678>
     e8e:	23 e0       	ldi	r18, 0x03	; 3
     e90:	25 15       	cp	r18, r5
     e92:	10 f4       	brcc	.+4      	; 0xe98 <vfprintf+0x6dc>
     e94:	83 e0       	ldi	r24, 0x03	; 3
     e96:	c1 cf       	rjmp	.-126    	; 0xe1a <vfprintf+0x65e>
     e98:	51 2c       	mov	r5, r1
     e9a:	c4 cf       	rjmp	.-120    	; 0xe24 <vfprintf+0x668>
     e9c:	60 96       	adiw	r28, 0x10	; 16
     e9e:	0f b6       	in	r0, 0x3f	; 63
     ea0:	f8 94       	cli
     ea2:	de bf       	out	0x3e, r29	; 62
     ea4:	0f be       	out	0x3f, r0	; 63
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	df 91       	pop	r29
     eaa:	cf 91       	pop	r28
     eac:	1f 91       	pop	r17
     eae:	0f 91       	pop	r16
     eb0:	ff 90       	pop	r15
     eb2:	ef 90       	pop	r14
     eb4:	df 90       	pop	r13
     eb6:	cf 90       	pop	r12
     eb8:	bf 90       	pop	r11
     eba:	af 90       	pop	r10
     ebc:	9f 90       	pop	r9
     ebe:	8f 90       	pop	r8
     ec0:	7f 90       	pop	r7
     ec2:	6f 90       	pop	r6
     ec4:	5f 90       	pop	r5
     ec6:	4f 90       	pop	r4
     ec8:	3f 90       	pop	r3
     eca:	2f 90       	pop	r2
     ecc:	08 95       	ret

00000ece <__ftoa_engine>:
     ece:	28 30       	cpi	r18, 0x08	; 8
     ed0:	08 f0       	brcs	.+2      	; 0xed4 <__ftoa_engine+0x6>
     ed2:	27 e0       	ldi	r18, 0x07	; 7
     ed4:	33 27       	eor	r19, r19
     ed6:	da 01       	movw	r26, r20
     ed8:	99 0f       	add	r25, r25
     eda:	31 1d       	adc	r19, r1
     edc:	87 fd       	sbrc	r24, 7
     ede:	91 60       	ori	r25, 0x01	; 1
     ee0:	00 96       	adiw	r24, 0x00	; 0
     ee2:	61 05       	cpc	r22, r1
     ee4:	71 05       	cpc	r23, r1
     ee6:	39 f4       	brne	.+14     	; 0xef6 <__ftoa_engine+0x28>
     ee8:	32 60       	ori	r19, 0x02	; 2
     eea:	2e 5f       	subi	r18, 0xFE	; 254
     eec:	3d 93       	st	X+, r19
     eee:	30 e3       	ldi	r19, 0x30	; 48
     ef0:	2a 95       	dec	r18
     ef2:	e1 f7       	brne	.-8      	; 0xeec <__ftoa_engine+0x1e>
     ef4:	08 95       	ret
     ef6:	9f 3f       	cpi	r25, 0xFF	; 255
     ef8:	30 f0       	brcs	.+12     	; 0xf06 <__ftoa_engine+0x38>
     efa:	80 38       	cpi	r24, 0x80	; 128
     efc:	71 05       	cpc	r23, r1
     efe:	61 05       	cpc	r22, r1
     f00:	09 f0       	breq	.+2      	; 0xf04 <__ftoa_engine+0x36>
     f02:	3c 5f       	subi	r19, 0xFC	; 252
     f04:	3c 5f       	subi	r19, 0xFC	; 252
     f06:	3d 93       	st	X+, r19
     f08:	91 30       	cpi	r25, 0x01	; 1
     f0a:	08 f0       	brcs	.+2      	; 0xf0e <__ftoa_engine+0x40>
     f0c:	80 68       	ori	r24, 0x80	; 128
     f0e:	91 1d       	adc	r25, r1
     f10:	df 93       	push	r29
     f12:	cf 93       	push	r28
     f14:	1f 93       	push	r17
     f16:	0f 93       	push	r16
     f18:	ff 92       	push	r15
     f1a:	ef 92       	push	r14
     f1c:	19 2f       	mov	r17, r25
     f1e:	98 7f       	andi	r25, 0xF8	; 248
     f20:	96 95       	lsr	r25
     f22:	e9 2f       	mov	r30, r25
     f24:	96 95       	lsr	r25
     f26:	96 95       	lsr	r25
     f28:	e9 0f       	add	r30, r25
     f2a:	ff 27       	eor	r31, r31
     f2c:	ea 5b       	subi	r30, 0xBA	; 186
     f2e:	fe 4f       	sbci	r31, 0xFE	; 254
     f30:	99 27       	eor	r25, r25
     f32:	33 27       	eor	r19, r19
     f34:	ee 24       	eor	r14, r14
     f36:	ff 24       	eor	r15, r15
     f38:	a7 01       	movw	r20, r14
     f3a:	e7 01       	movw	r28, r14
     f3c:	05 90       	lpm	r0, Z+
     f3e:	08 94       	sec
     f40:	07 94       	ror	r0
     f42:	28 f4       	brcc	.+10     	; 0xf4e <__ftoa_engine+0x80>
     f44:	36 0f       	add	r19, r22
     f46:	e7 1e       	adc	r14, r23
     f48:	f8 1e       	adc	r15, r24
     f4a:	49 1f       	adc	r20, r25
     f4c:	51 1d       	adc	r21, r1
     f4e:	66 0f       	add	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	06 94       	lsr	r0
     f58:	a1 f7       	brne	.-24     	; 0xf42 <__ftoa_engine+0x74>
     f5a:	05 90       	lpm	r0, Z+
     f5c:	07 94       	ror	r0
     f5e:	28 f4       	brcc	.+10     	; 0xf6a <__ftoa_engine+0x9c>
     f60:	e7 0e       	add	r14, r23
     f62:	f8 1e       	adc	r15, r24
     f64:	49 1f       	adc	r20, r25
     f66:	56 1f       	adc	r21, r22
     f68:	c1 1d       	adc	r28, r1
     f6a:	77 0f       	add	r23, r23
     f6c:	88 1f       	adc	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	66 1f       	adc	r22, r22
     f72:	06 94       	lsr	r0
     f74:	a1 f7       	brne	.-24     	; 0xf5e <__ftoa_engine+0x90>
     f76:	05 90       	lpm	r0, Z+
     f78:	07 94       	ror	r0
     f7a:	28 f4       	brcc	.+10     	; 0xf86 <__ftoa_engine+0xb8>
     f7c:	f8 0e       	add	r15, r24
     f7e:	49 1f       	adc	r20, r25
     f80:	56 1f       	adc	r21, r22
     f82:	c7 1f       	adc	r28, r23
     f84:	d1 1d       	adc	r29, r1
     f86:	88 0f       	add	r24, r24
     f88:	99 1f       	adc	r25, r25
     f8a:	66 1f       	adc	r22, r22
     f8c:	77 1f       	adc	r23, r23
     f8e:	06 94       	lsr	r0
     f90:	a1 f7       	brne	.-24     	; 0xf7a <__ftoa_engine+0xac>
     f92:	05 90       	lpm	r0, Z+
     f94:	07 94       	ror	r0
     f96:	20 f4       	brcc	.+8      	; 0xfa0 <__ftoa_engine+0xd2>
     f98:	49 0f       	add	r20, r25
     f9a:	56 1f       	adc	r21, r22
     f9c:	c7 1f       	adc	r28, r23
     f9e:	d8 1f       	adc	r29, r24
     fa0:	99 0f       	add	r25, r25
     fa2:	66 1f       	adc	r22, r22
     fa4:	77 1f       	adc	r23, r23
     fa6:	88 1f       	adc	r24, r24
     fa8:	06 94       	lsr	r0
     faa:	a9 f7       	brne	.-22     	; 0xf96 <__ftoa_engine+0xc8>
     fac:	84 91       	lpm	r24, Z
     fae:	10 95       	com	r17
     fb0:	17 70       	andi	r17, 0x07	; 7
     fb2:	41 f0       	breq	.+16     	; 0xfc4 <__ftoa_engine+0xf6>
     fb4:	d6 95       	lsr	r29
     fb6:	c7 95       	ror	r28
     fb8:	57 95       	ror	r21
     fba:	47 95       	ror	r20
     fbc:	f7 94       	ror	r15
     fbe:	e7 94       	ror	r14
     fc0:	1a 95       	dec	r17
     fc2:	c1 f7       	brne	.-16     	; 0xfb4 <__ftoa_engine+0xe6>
     fc4:	ec ee       	ldi	r30, 0xEC	; 236
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	68 94       	set
     fca:	15 90       	lpm	r1, Z+
     fcc:	15 91       	lpm	r17, Z+
     fce:	35 91       	lpm	r19, Z+
     fd0:	65 91       	lpm	r22, Z+
     fd2:	95 91       	lpm	r25, Z+
     fd4:	05 90       	lpm	r0, Z+
     fd6:	7f e2       	ldi	r23, 0x2F	; 47
     fd8:	73 95       	inc	r23
     fda:	e1 18       	sub	r14, r1
     fdc:	f1 0a       	sbc	r15, r17
     fde:	43 0b       	sbc	r20, r19
     fe0:	56 0b       	sbc	r21, r22
     fe2:	c9 0b       	sbc	r28, r25
     fe4:	d0 09       	sbc	r29, r0
     fe6:	c0 f7       	brcc	.-16     	; 0xfd8 <__ftoa_engine+0x10a>
     fe8:	e1 0c       	add	r14, r1
     fea:	f1 1e       	adc	r15, r17
     fec:	43 1f       	adc	r20, r19
     fee:	56 1f       	adc	r21, r22
     ff0:	c9 1f       	adc	r28, r25
     ff2:	d0 1d       	adc	r29, r0
     ff4:	7e f4       	brtc	.+30     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
     ff6:	70 33       	cpi	r23, 0x30	; 48
     ff8:	11 f4       	brne	.+4      	; 0xffe <__ftoa_engine+0x130>
     ffa:	8a 95       	dec	r24
     ffc:	e6 cf       	rjmp	.-52     	; 0xfca <__ftoa_engine+0xfc>
     ffe:	e8 94       	clt
    1000:	01 50       	subi	r16, 0x01	; 1
    1002:	30 f0       	brcs	.+12     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    1004:	08 0f       	add	r16, r24
    1006:	0a f4       	brpl	.+2      	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
    1008:	00 27       	eor	r16, r16
    100a:	02 17       	cp	r16, r18
    100c:	08 f4       	brcc	.+2      	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    100e:	20 2f       	mov	r18, r16
    1010:	23 95       	inc	r18
    1012:	02 2f       	mov	r16, r18
    1014:	7a 33       	cpi	r23, 0x3A	; 58
    1016:	28 f0       	brcs	.+10     	; 0x1022 <__EEPROM_REGION_LENGTH__+0x22>
    1018:	79 e3       	ldi	r23, 0x39	; 57
    101a:	7d 93       	st	X+, r23
    101c:	2a 95       	dec	r18
    101e:	e9 f7       	brne	.-6      	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
    1020:	10 c0       	rjmp	.+32     	; 0x1042 <__EEPROM_REGION_LENGTH__+0x42>
    1022:	7d 93       	st	X+, r23
    1024:	2a 95       	dec	r18
    1026:	89 f6       	brne	.-94     	; 0xfca <__ftoa_engine+0xfc>
    1028:	06 94       	lsr	r0
    102a:	97 95       	ror	r25
    102c:	67 95       	ror	r22
    102e:	37 95       	ror	r19
    1030:	17 95       	ror	r17
    1032:	17 94       	ror	r1
    1034:	e1 18       	sub	r14, r1
    1036:	f1 0a       	sbc	r15, r17
    1038:	43 0b       	sbc	r20, r19
    103a:	56 0b       	sbc	r21, r22
    103c:	c9 0b       	sbc	r28, r25
    103e:	d0 09       	sbc	r29, r0
    1040:	98 f0       	brcs	.+38     	; 0x1068 <__EEPROM_REGION_LENGTH__+0x68>
    1042:	23 95       	inc	r18
    1044:	7e 91       	ld	r23, -X
    1046:	73 95       	inc	r23
    1048:	7a 33       	cpi	r23, 0x3A	; 58
    104a:	08 f0       	brcs	.+2      	; 0x104e <__EEPROM_REGION_LENGTH__+0x4e>
    104c:	70 e3       	ldi	r23, 0x30	; 48
    104e:	7c 93       	st	X, r23
    1050:	20 13       	cpse	r18, r16
    1052:	b8 f7       	brcc	.-18     	; 0x1042 <__EEPROM_REGION_LENGTH__+0x42>
    1054:	7e 91       	ld	r23, -X
    1056:	70 61       	ori	r23, 0x10	; 16
    1058:	7d 93       	st	X+, r23
    105a:	30 f0       	brcs	.+12     	; 0x1068 <__EEPROM_REGION_LENGTH__+0x68>
    105c:	83 95       	inc	r24
    105e:	71 e3       	ldi	r23, 0x31	; 49
    1060:	7d 93       	st	X+, r23
    1062:	70 e3       	ldi	r23, 0x30	; 48
    1064:	2a 95       	dec	r18
    1066:	e1 f7       	brne	.-8      	; 0x1060 <__EEPROM_REGION_LENGTH__+0x60>
    1068:	11 24       	eor	r1, r1
    106a:	ef 90       	pop	r14
    106c:	ff 90       	pop	r15
    106e:	0f 91       	pop	r16
    1070:	1f 91       	pop	r17
    1072:	cf 91       	pop	r28
    1074:	df 91       	pop	r29
    1076:	99 27       	eor	r25, r25
    1078:	87 fd       	sbrc	r24, 7
    107a:	90 95       	com	r25
    107c:	08 95       	ret

0000107e <strnlen_P>:
    107e:	fc 01       	movw	r30, r24
    1080:	05 90       	lpm	r0, Z+
    1082:	61 50       	subi	r22, 0x01	; 1
    1084:	70 40       	sbci	r23, 0x00	; 0
    1086:	01 10       	cpse	r0, r1
    1088:	d8 f7       	brcc	.-10     	; 0x1080 <strnlen_P+0x2>
    108a:	80 95       	com	r24
    108c:	90 95       	com	r25
    108e:	8e 0f       	add	r24, r30
    1090:	9f 1f       	adc	r25, r31
    1092:	08 95       	ret

00001094 <strnlen>:
    1094:	fc 01       	movw	r30, r24
    1096:	61 50       	subi	r22, 0x01	; 1
    1098:	70 40       	sbci	r23, 0x00	; 0
    109a:	01 90       	ld	r0, Z+
    109c:	01 10       	cpse	r0, r1
    109e:	d8 f7       	brcc	.-10     	; 0x1096 <strnlen+0x2>
    10a0:	80 95       	com	r24
    10a2:	90 95       	com	r25
    10a4:	8e 0f       	add	r24, r30
    10a6:	9f 1f       	adc	r25, r31
    10a8:	08 95       	ret

000010aa <fputc>:
    10aa:	0f 93       	push	r16
    10ac:	1f 93       	push	r17
    10ae:	cf 93       	push	r28
    10b0:	df 93       	push	r29
    10b2:	fb 01       	movw	r30, r22
    10b4:	23 81       	ldd	r18, Z+3	; 0x03
    10b6:	21 fd       	sbrc	r18, 1
    10b8:	03 c0       	rjmp	.+6      	; 0x10c0 <fputc+0x16>
    10ba:	8f ef       	ldi	r24, 0xFF	; 255
    10bc:	9f ef       	ldi	r25, 0xFF	; 255
    10be:	2c c0       	rjmp	.+88     	; 0x1118 <fputc+0x6e>
    10c0:	22 ff       	sbrs	r18, 2
    10c2:	16 c0       	rjmp	.+44     	; 0x10f0 <fputc+0x46>
    10c4:	46 81       	ldd	r20, Z+6	; 0x06
    10c6:	57 81       	ldd	r21, Z+7	; 0x07
    10c8:	24 81       	ldd	r18, Z+4	; 0x04
    10ca:	35 81       	ldd	r19, Z+5	; 0x05
    10cc:	42 17       	cp	r20, r18
    10ce:	53 07       	cpc	r21, r19
    10d0:	44 f4       	brge	.+16     	; 0x10e2 <fputc+0x38>
    10d2:	a0 81       	ld	r26, Z
    10d4:	b1 81       	ldd	r27, Z+1	; 0x01
    10d6:	9d 01       	movw	r18, r26
    10d8:	2f 5f       	subi	r18, 0xFF	; 255
    10da:	3f 4f       	sbci	r19, 0xFF	; 255
    10dc:	31 83       	std	Z+1, r19	; 0x01
    10de:	20 83       	st	Z, r18
    10e0:	8c 93       	st	X, r24
    10e2:	26 81       	ldd	r18, Z+6	; 0x06
    10e4:	37 81       	ldd	r19, Z+7	; 0x07
    10e6:	2f 5f       	subi	r18, 0xFF	; 255
    10e8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ea:	37 83       	std	Z+7, r19	; 0x07
    10ec:	26 83       	std	Z+6, r18	; 0x06
    10ee:	14 c0       	rjmp	.+40     	; 0x1118 <fputc+0x6e>
    10f0:	8b 01       	movw	r16, r22
    10f2:	ec 01       	movw	r28, r24
    10f4:	fb 01       	movw	r30, r22
    10f6:	00 84       	ldd	r0, Z+8	; 0x08
    10f8:	f1 85       	ldd	r31, Z+9	; 0x09
    10fa:	e0 2d       	mov	r30, r0
    10fc:	19 95       	eicall
    10fe:	89 2b       	or	r24, r25
    1100:	e1 f6       	brne	.-72     	; 0x10ba <fputc+0x10>
    1102:	d8 01       	movw	r26, r16
    1104:	16 96       	adiw	r26, 0x06	; 6
    1106:	8d 91       	ld	r24, X+
    1108:	9c 91       	ld	r25, X
    110a:	17 97       	sbiw	r26, 0x07	; 7
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	17 96       	adiw	r26, 0x07	; 7
    1110:	9c 93       	st	X, r25
    1112:	8e 93       	st	-X, r24
    1114:	16 97       	sbiw	r26, 0x06	; 6
    1116:	ce 01       	movw	r24, r28
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	1f 91       	pop	r17
    111e:	0f 91       	pop	r16
    1120:	08 95       	ret

00001122 <sprintf>:
    1122:	0f 93       	push	r16
    1124:	1f 93       	push	r17
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	2e 97       	sbiw	r28, 0x0e	; 14
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	f8 94       	cli
    1134:	de bf       	out	0x3e, r29	; 62
    1136:	0f be       	out	0x3f, r0	; 63
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	0e 89       	ldd	r16, Y+22	; 0x16
    113c:	1f 89       	ldd	r17, Y+23	; 0x17
    113e:	86 e0       	ldi	r24, 0x06	; 6
    1140:	8c 83       	std	Y+4, r24	; 0x04
    1142:	1a 83       	std	Y+2, r17	; 0x02
    1144:	09 83       	std	Y+1, r16	; 0x01
    1146:	8f ef       	ldi	r24, 0xFF	; 255
    1148:	9f e7       	ldi	r25, 0x7F	; 127
    114a:	9e 83       	std	Y+6, r25	; 0x06
    114c:	8d 83       	std	Y+5, r24	; 0x05
    114e:	ae 01       	movw	r20, r28
    1150:	46 5e       	subi	r20, 0xE6	; 230
    1152:	5f 4f       	sbci	r21, 0xFF	; 255
    1154:	68 8d       	ldd	r22, Y+24	; 0x18
    1156:	79 8d       	ldd	r23, Y+25	; 0x19
    1158:	ce 01       	movw	r24, r28
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	2f db       	rcall	.-2466   	; 0x7bc <vfprintf>
    115e:	ef 81       	ldd	r30, Y+7	; 0x07
    1160:	f8 85       	ldd	r31, Y+8	; 0x08
    1162:	e0 0f       	add	r30, r16
    1164:	f1 1f       	adc	r31, r17
    1166:	10 82       	st	Z, r1
    1168:	2e 96       	adiw	r28, 0x0e	; 14
    116a:	0f b6       	in	r0, 0x3f	; 63
    116c:	f8 94       	cli
    116e:	de bf       	out	0x3e, r29	; 62
    1170:	0f be       	out	0x3f, r0	; 63
    1172:	cd bf       	out	0x3d, r28	; 61
    1174:	df 91       	pop	r29
    1176:	cf 91       	pop	r28
    1178:	1f 91       	pop	r17
    117a:	0f 91       	pop	r16
    117c:	08 95       	ret

0000117e <__ultoa_invert>:
    117e:	fa 01       	movw	r30, r20
    1180:	aa 27       	eor	r26, r26
    1182:	28 30       	cpi	r18, 0x08	; 8
    1184:	51 f1       	breq	.+84     	; 0x11da <__ultoa_invert+0x5c>
    1186:	20 31       	cpi	r18, 0x10	; 16
    1188:	81 f1       	breq	.+96     	; 0x11ea <__ultoa_invert+0x6c>
    118a:	e8 94       	clt
    118c:	6f 93       	push	r22
    118e:	6e 7f       	andi	r22, 0xFE	; 254
    1190:	6e 5f       	subi	r22, 0xFE	; 254
    1192:	7f 4f       	sbci	r23, 0xFF	; 255
    1194:	8f 4f       	sbci	r24, 0xFF	; 255
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	af 4f       	sbci	r26, 0xFF	; 255
    119a:	b1 e0       	ldi	r27, 0x01	; 1
    119c:	3e d0       	rcall	.+124    	; 0x121a <__ultoa_invert+0x9c>
    119e:	b4 e0       	ldi	r27, 0x04	; 4
    11a0:	3c d0       	rcall	.+120    	; 0x121a <__ultoa_invert+0x9c>
    11a2:	67 0f       	add	r22, r23
    11a4:	78 1f       	adc	r23, r24
    11a6:	89 1f       	adc	r24, r25
    11a8:	9a 1f       	adc	r25, r26
    11aa:	a1 1d       	adc	r26, r1
    11ac:	68 0f       	add	r22, r24
    11ae:	79 1f       	adc	r23, r25
    11b0:	8a 1f       	adc	r24, r26
    11b2:	91 1d       	adc	r25, r1
    11b4:	a1 1d       	adc	r26, r1
    11b6:	6a 0f       	add	r22, r26
    11b8:	71 1d       	adc	r23, r1
    11ba:	81 1d       	adc	r24, r1
    11bc:	91 1d       	adc	r25, r1
    11be:	a1 1d       	adc	r26, r1
    11c0:	20 d0       	rcall	.+64     	; 0x1202 <__ultoa_invert+0x84>
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <__ultoa_invert+0x48>
    11c4:	68 94       	set
    11c6:	3f 91       	pop	r19
    11c8:	2a e0       	ldi	r18, 0x0A	; 10
    11ca:	26 9f       	mul	r18, r22
    11cc:	11 24       	eor	r1, r1
    11ce:	30 19       	sub	r19, r0
    11d0:	30 5d       	subi	r19, 0xD0	; 208
    11d2:	31 93       	st	Z+, r19
    11d4:	de f6       	brtc	.-74     	; 0x118c <__ultoa_invert+0xe>
    11d6:	cf 01       	movw	r24, r30
    11d8:	08 95       	ret
    11da:	46 2f       	mov	r20, r22
    11dc:	47 70       	andi	r20, 0x07	; 7
    11de:	40 5d       	subi	r20, 0xD0	; 208
    11e0:	41 93       	st	Z+, r20
    11e2:	b3 e0       	ldi	r27, 0x03	; 3
    11e4:	0f d0       	rcall	.+30     	; 0x1204 <__ultoa_invert+0x86>
    11e6:	c9 f7       	brne	.-14     	; 0x11da <__ultoa_invert+0x5c>
    11e8:	f6 cf       	rjmp	.-20     	; 0x11d6 <__ultoa_invert+0x58>
    11ea:	46 2f       	mov	r20, r22
    11ec:	4f 70       	andi	r20, 0x0F	; 15
    11ee:	40 5d       	subi	r20, 0xD0	; 208
    11f0:	4a 33       	cpi	r20, 0x3A	; 58
    11f2:	18 f0       	brcs	.+6      	; 0x11fa <__ultoa_invert+0x7c>
    11f4:	49 5d       	subi	r20, 0xD9	; 217
    11f6:	31 fd       	sbrc	r19, 1
    11f8:	40 52       	subi	r20, 0x20	; 32
    11fa:	41 93       	st	Z+, r20
    11fc:	02 d0       	rcall	.+4      	; 0x1202 <__ultoa_invert+0x84>
    11fe:	a9 f7       	brne	.-22     	; 0x11ea <__ultoa_invert+0x6c>
    1200:	ea cf       	rjmp	.-44     	; 0x11d6 <__ultoa_invert+0x58>
    1202:	b4 e0       	ldi	r27, 0x04	; 4
    1204:	a6 95       	lsr	r26
    1206:	97 95       	ror	r25
    1208:	87 95       	ror	r24
    120a:	77 95       	ror	r23
    120c:	67 95       	ror	r22
    120e:	ba 95       	dec	r27
    1210:	c9 f7       	brne	.-14     	; 0x1204 <__ultoa_invert+0x86>
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	61 05       	cpc	r22, r1
    1216:	71 05       	cpc	r23, r1
    1218:	08 95       	ret
    121a:	9b 01       	movw	r18, r22
    121c:	ac 01       	movw	r20, r24
    121e:	0a 2e       	mov	r0, r26
    1220:	06 94       	lsr	r0
    1222:	57 95       	ror	r21
    1224:	47 95       	ror	r20
    1226:	37 95       	ror	r19
    1228:	27 95       	ror	r18
    122a:	ba 95       	dec	r27
    122c:	c9 f7       	brne	.-14     	; 0x1220 <__ultoa_invert+0xa2>
    122e:	62 0f       	add	r22, r18
    1230:	73 1f       	adc	r23, r19
    1232:	84 1f       	adc	r24, r20
    1234:	95 1f       	adc	r25, r21
    1236:	a0 1d       	adc	r26, r0
    1238:	08 95       	ret

0000123a <_exit>:
    123a:	f8 94       	cli

0000123c <__stop_program>:
    123c:	ff cf       	rjmp	.-2      	; 0x123c <__stop_program>

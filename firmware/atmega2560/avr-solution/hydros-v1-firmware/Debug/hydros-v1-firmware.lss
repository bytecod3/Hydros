
hydros-v1-firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  000007d4  00000868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080021a  0080021a  00000882  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000882  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f8c  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d66  00000000  00000000  00001954  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005bc  00000000  00000000  000026ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000012c  00000000  00000000  00002c78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000069d  00000000  00000000  00002da4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000133  00000000  00000000  00003441  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003574  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6f c0       	rjmp	.+222    	; 0x124 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ed       	ldi	r30, 0xD4	; 212
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 31       	cpi	r26, 0x1A	; 26
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e1       	ldi	r26, 0x1A	; 26
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 31       	cpi	r26, 0x1C	; 28
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	1d d0       	rcall	.+58     	; 0x15a <main>
 120:	57 c3       	rjmp	.+1710   	; 0x7d0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <__vector_17>:

/************************************************************************/
/* Interrupt service routines                                                                     */
/************************************************************************/
volatile int isr_tim1_counter = 0;
ISR(TIMER1_COMPA_vect) {
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
	isr_tim1_counter++;
 132:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <__data_end>
 136:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <__data_end+0x1>
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <__data_end+0x1>
 140:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <__data_end>
	PORTD ^= (1 << PD0);
 144:	9b b1       	in	r25, 0x0b	; 11
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	89 27       	eor	r24, r25
 14a:	8b b9       	out	0x0b, r24	; 11
}
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <main>:

int main(void)
{ 
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	cd b7       	in	r28, 0x3d	; 61
 160:	de b7       	in	r29, 0x3e	; 62
 162:	2a 97       	sbiw	r28, 0x0a	; 10
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	f8 94       	cli
 168:	de bf       	out	0x3e, r29	; 62
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	cd bf       	out	0x3d, r28	; 61
	/* initialize hardware*/
	USART_init(MYUBRR);	
 16e:	87 e6       	ldi	r24, 0x67	; 103
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	20 d0       	rcall	.+64     	; 0x1b4 <USART_init>
	char* f_version = "Version: Hydros v1.0";
	USART_put_string(f_version);
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	92 e0       	ldi	r25, 0x02	; 2
 178:	2f d0       	rcall	.+94     	; 0x1d8 <USART_put_string>

	DDRD |= (1 << PD0); // OUTPUT MODE
 17a:	8a b1       	in	r24, 0x0a	; 10
 17c:	81 60       	ori	r24, 0x01	; 1
	
	/* output buffers */
	char isr_counter_buffer[10];
	
	/* start timer1 interrupts */
	timer1_delay_1s_non_blocking();
 17e:	8a b9       	out	0x0a, r24	; 10
 180:	37 d0       	rcall	.+110    	; 0x1f0 <timer1_delay_1s_non_blocking>
		
		//if(timer1_delay_blocking_1s_TCNCT()) {
			//PORTD ^= (1 << PD0);
		//}
		
		sprintf(isr_counter_buffer, "%d\r\n", isr_tim1_counter);
 182:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <__data_end>
 186:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <__data_end+0x1>
 18a:	9f 93       	push	r25
 18c:	8f 93       	push	r24
 18e:	85 e1       	ldi	r24, 0x15	; 21
 190:	92 e0       	ldi	r25, 0x02	; 2
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	8e 01       	movw	r16, r28
 198:	0f 5f       	subi	r16, 0xFF	; 255
 19a:	1f 4f       	sbci	r17, 0xFF	; 255
 19c:	1f 93       	push	r17
 19e:	0f 93       	push	r16
		USART_put_string(isr_counter_buffer);
 1a0:	3c d0       	rcall	.+120    	; 0x21a <sprintf>
 1a2:	c8 01       	movw	r24, r16
 1a4:	19 d0       	rcall	.+50     	; 0x1d8 <USART_put_string>
 1a6:	0f 90       	pop	r0
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	e7 cf       	rjmp	.-50     	; 0x182 <main+0x28>

000001b4 <USART_init>:

unsigned char USART_receive() {
	/*check if RXC (receive complete flag) is set */
	while(!(UCSR0A & (1 << RXC0)));
	return UDR0;
}
 1b4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 1b8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 1bc:	88 e1       	ldi	r24, 0x18	; 24
 1be:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 1c2:	8e e0       	ldi	r24, 0x0E	; 14
 1c4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 1c8:	08 95       	ret

000001ca <USART_transmit>:
 1ca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 1ce:	95 ff       	sbrs	r25, 5
 1d0:	fc cf       	rjmp	.-8      	; 0x1ca <USART_transmit>
 1d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 1d6:	08 95       	ret

000001d8 <USART_put_string>:

void USART_put_string(char* pstr) {
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	ec 01       	movw	r28, r24
	/* loop until we are the end of the string */
	while(*pstr != 0x00) {
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <USART_put_string+0xc>
		USART_transmit(*pstr);
 1e0:	f4 df       	rcall	.-24     	; 0x1ca <USART_transmit>
		pstr++;
 1e2:	21 96       	adiw	r28, 0x01	; 1
	return UDR0;
}

void USART_put_string(char* pstr) {
	/* loop until we are the end of the string */
	while(*pstr != 0x00) {
 1e4:	88 81       	ld	r24, Y
 1e6:	81 11       	cpse	r24, r1
 1e8:	fb cf       	rjmp	.-10     	; 0x1e0 <USART_put_string+0x8>
		USART_transmit(*pstr);
		pstr++;
	}
}
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <timer1_delay_1s_non_blocking>:
	
	return 0;
}

void timer1_delay_1s_non_blocking() {
	TCCR1B |= (1 << WGM12);					// set timer1 to CTC mode
 1f0:	e1 e8       	ldi	r30, 0x81	; 129
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	88 60       	ori	r24, 0x08	; 8
 1f8:	80 83       	st	Z, r24
	
	TIMSK1 |= (1 << OCIE1A);				// enable CTC interrupt
 1fa:	af e6       	ldi	r26, 0x6F	; 111
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	8c 91       	ld	r24, X
 200:	82 60       	ori	r24, 0x02	; 2
 202:	8c 93       	st	X, r24
	sei();									// enable global interrupts
 204:	78 94       	sei
	OCR1A = 15624;							// set compare value - this value is pre-calculated - 1 second
 206:	88 e0       	ldi	r24, 0x08	; 8
 208:	9d e3       	ldi	r25, 0x3D	; 61
 20a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 20e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	TCCR1B |= (1 << CS12) | (1 << CS10);	// prescaler 1024
 212:	80 81       	ld	r24, Z
 214:	85 60       	ori	r24, 0x05	; 5
 216:	80 83       	st	Z, r24
 218:	08 95       	ret

0000021a <sprintf>:
 21a:	0f 93       	push	r16
 21c:	1f 93       	push	r17
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	cd b7       	in	r28, 0x3d	; 61
 224:	de b7       	in	r29, 0x3e	; 62
 226:	2e 97       	sbiw	r28, 0x0e	; 14
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	0e 89       	ldd	r16, Y+22	; 0x16
 234:	1f 89       	ldd	r17, Y+23	; 0x17
 236:	86 e0       	ldi	r24, 0x06	; 6
 238:	8c 83       	std	Y+4, r24	; 0x04
 23a:	1a 83       	std	Y+2, r17	; 0x02
 23c:	09 83       	std	Y+1, r16	; 0x01
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	9f e7       	ldi	r25, 0x7F	; 127
 242:	9e 83       	std	Y+6, r25	; 0x06
 244:	8d 83       	std	Y+5, r24	; 0x05
 246:	ae 01       	movw	r20, r28
 248:	46 5e       	subi	r20, 0xE6	; 230
 24a:	5f 4f       	sbci	r21, 0xFF	; 255
 24c:	68 8d       	ldd	r22, Y+24	; 0x18
 24e:	79 8d       	ldd	r23, Y+25	; 0x19
 250:	ce 01       	movw	r24, r28
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	10 d0       	rcall	.+32     	; 0x276 <vfprintf>
 256:	ef 81       	ldd	r30, Y+7	; 0x07
 258:	f8 85       	ldd	r31, Y+8	; 0x08
 25a:	e0 0f       	add	r30, r16
 25c:	f1 1f       	adc	r31, r17
 25e:	10 82       	st	Z, r1
 260:	2e 96       	adiw	r28, 0x0e	; 14
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	f8 94       	cli
 266:	de bf       	out	0x3e, r29	; 62
 268:	0f be       	out	0x3f, r0	; 63
 26a:	cd bf       	out	0x3d, r28	; 61
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	1f 91       	pop	r17
 272:	0f 91       	pop	r16
 274:	08 95       	ret

00000276 <vfprintf>:
 276:	2f 92       	push	r2
 278:	3f 92       	push	r3
 27a:	4f 92       	push	r4
 27c:	5f 92       	push	r5
 27e:	6f 92       	push	r6
 280:	7f 92       	push	r7
 282:	8f 92       	push	r8
 284:	9f 92       	push	r9
 286:	af 92       	push	r10
 288:	bf 92       	push	r11
 28a:	cf 92       	push	r12
 28c:	df 92       	push	r13
 28e:	ef 92       	push	r14
 290:	ff 92       	push	r15
 292:	0f 93       	push	r16
 294:	1f 93       	push	r17
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	cd b7       	in	r28, 0x3d	; 61
 29c:	de b7       	in	r29, 0x3e	; 62
 29e:	2b 97       	sbiw	r28, 0x0b	; 11
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	f8 94       	cli
 2a4:	de bf       	out	0x3e, r29	; 62
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	cd bf       	out	0x3d, r28	; 61
 2aa:	6c 01       	movw	r12, r24
 2ac:	7b 01       	movw	r14, r22
 2ae:	8a 01       	movw	r16, r20
 2b0:	fc 01       	movw	r30, r24
 2b2:	17 82       	std	Z+7, r1	; 0x07
 2b4:	16 82       	std	Z+6, r1	; 0x06
 2b6:	83 81       	ldd	r24, Z+3	; 0x03
 2b8:	81 ff       	sbrs	r24, 1
 2ba:	bf c1       	rjmp	.+894    	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 2bc:	ce 01       	movw	r24, r28
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	3c 01       	movw	r6, r24
 2c2:	f6 01       	movw	r30, r12
 2c4:	93 81       	ldd	r25, Z+3	; 0x03
 2c6:	f7 01       	movw	r30, r14
 2c8:	93 fd       	sbrc	r25, 3
 2ca:	85 91       	lpm	r24, Z+
 2cc:	93 ff       	sbrs	r25, 3
 2ce:	81 91       	ld	r24, Z+
 2d0:	7f 01       	movw	r14, r30
 2d2:	88 23       	and	r24, r24
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <vfprintf+0x62>
 2d6:	ad c1       	rjmp	.+858    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 2d8:	85 32       	cpi	r24, 0x25	; 37
 2da:	39 f4       	brne	.+14     	; 0x2ea <vfprintf+0x74>
 2dc:	93 fd       	sbrc	r25, 3
 2de:	85 91       	lpm	r24, Z+
 2e0:	93 ff       	sbrs	r25, 3
 2e2:	81 91       	ld	r24, Z+
 2e4:	7f 01       	movw	r14, r30
 2e6:	85 32       	cpi	r24, 0x25	; 37
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <vfprintf+0x7c>
 2ea:	b6 01       	movw	r22, r12
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	d6 d1       	rcall	.+940    	; 0x69c <fputc>
 2f0:	e8 cf       	rjmp	.-48     	; 0x2c2 <vfprintf+0x4c>
 2f2:	91 2c       	mov	r9, r1
 2f4:	21 2c       	mov	r2, r1
 2f6:	31 2c       	mov	r3, r1
 2f8:	ff e1       	ldi	r31, 0x1F	; 31
 2fa:	f3 15       	cp	r31, r3
 2fc:	d8 f0       	brcs	.+54     	; 0x334 <vfprintf+0xbe>
 2fe:	8b 32       	cpi	r24, 0x2B	; 43
 300:	79 f0       	breq	.+30     	; 0x320 <vfprintf+0xaa>
 302:	38 f4       	brcc	.+14     	; 0x312 <vfprintf+0x9c>
 304:	80 32       	cpi	r24, 0x20	; 32
 306:	79 f0       	breq	.+30     	; 0x326 <vfprintf+0xb0>
 308:	83 32       	cpi	r24, 0x23	; 35
 30a:	a1 f4       	brne	.+40     	; 0x334 <vfprintf+0xbe>
 30c:	23 2d       	mov	r18, r3
 30e:	20 61       	ori	r18, 0x10	; 16
 310:	1d c0       	rjmp	.+58     	; 0x34c <vfprintf+0xd6>
 312:	8d 32       	cpi	r24, 0x2D	; 45
 314:	61 f0       	breq	.+24     	; 0x32e <vfprintf+0xb8>
 316:	80 33       	cpi	r24, 0x30	; 48
 318:	69 f4       	brne	.+26     	; 0x334 <vfprintf+0xbe>
 31a:	23 2d       	mov	r18, r3
 31c:	21 60       	ori	r18, 0x01	; 1
 31e:	16 c0       	rjmp	.+44     	; 0x34c <vfprintf+0xd6>
 320:	83 2d       	mov	r24, r3
 322:	82 60       	ori	r24, 0x02	; 2
 324:	38 2e       	mov	r3, r24
 326:	e3 2d       	mov	r30, r3
 328:	e4 60       	ori	r30, 0x04	; 4
 32a:	3e 2e       	mov	r3, r30
 32c:	2a c0       	rjmp	.+84     	; 0x382 <vfprintf+0x10c>
 32e:	f3 2d       	mov	r31, r3
 330:	f8 60       	ori	r31, 0x08	; 8
 332:	1d c0       	rjmp	.+58     	; 0x36e <vfprintf+0xf8>
 334:	37 fc       	sbrc	r3, 7
 336:	2d c0       	rjmp	.+90     	; 0x392 <vfprintf+0x11c>
 338:	20 ed       	ldi	r18, 0xD0	; 208
 33a:	28 0f       	add	r18, r24
 33c:	2a 30       	cpi	r18, 0x0A	; 10
 33e:	40 f0       	brcs	.+16     	; 0x350 <vfprintf+0xda>
 340:	8e 32       	cpi	r24, 0x2E	; 46
 342:	b9 f4       	brne	.+46     	; 0x372 <vfprintf+0xfc>
 344:	36 fc       	sbrc	r3, 6
 346:	75 c1       	rjmp	.+746    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 348:	23 2d       	mov	r18, r3
 34a:	20 64       	ori	r18, 0x40	; 64
 34c:	32 2e       	mov	r3, r18
 34e:	19 c0       	rjmp	.+50     	; 0x382 <vfprintf+0x10c>
 350:	36 fe       	sbrs	r3, 6
 352:	06 c0       	rjmp	.+12     	; 0x360 <vfprintf+0xea>
 354:	8a e0       	ldi	r24, 0x0A	; 10
 356:	98 9e       	mul	r9, r24
 358:	20 0d       	add	r18, r0
 35a:	11 24       	eor	r1, r1
 35c:	92 2e       	mov	r9, r18
 35e:	11 c0       	rjmp	.+34     	; 0x382 <vfprintf+0x10c>
 360:	ea e0       	ldi	r30, 0x0A	; 10
 362:	2e 9e       	mul	r2, r30
 364:	20 0d       	add	r18, r0
 366:	11 24       	eor	r1, r1
 368:	22 2e       	mov	r2, r18
 36a:	f3 2d       	mov	r31, r3
 36c:	f0 62       	ori	r31, 0x20	; 32
 36e:	3f 2e       	mov	r3, r31
 370:	08 c0       	rjmp	.+16     	; 0x382 <vfprintf+0x10c>
 372:	8c 36       	cpi	r24, 0x6C	; 108
 374:	21 f4       	brne	.+8      	; 0x37e <vfprintf+0x108>
 376:	83 2d       	mov	r24, r3
 378:	80 68       	ori	r24, 0x80	; 128
 37a:	38 2e       	mov	r3, r24
 37c:	02 c0       	rjmp	.+4      	; 0x382 <vfprintf+0x10c>
 37e:	88 36       	cpi	r24, 0x68	; 104
 380:	41 f4       	brne	.+16     	; 0x392 <vfprintf+0x11c>
 382:	f7 01       	movw	r30, r14
 384:	93 fd       	sbrc	r25, 3
 386:	85 91       	lpm	r24, Z+
 388:	93 ff       	sbrs	r25, 3
 38a:	81 91       	ld	r24, Z+
 38c:	7f 01       	movw	r14, r30
 38e:	81 11       	cpse	r24, r1
 390:	b3 cf       	rjmp	.-154    	; 0x2f8 <vfprintf+0x82>
 392:	98 2f       	mov	r25, r24
 394:	9f 7d       	andi	r25, 0xDF	; 223
 396:	95 54       	subi	r25, 0x45	; 69
 398:	93 30       	cpi	r25, 0x03	; 3
 39a:	28 f4       	brcc	.+10     	; 0x3a6 <vfprintf+0x130>
 39c:	0c 5f       	subi	r16, 0xFC	; 252
 39e:	1f 4f       	sbci	r17, 0xFF	; 255
 3a0:	9f e3       	ldi	r25, 0x3F	; 63
 3a2:	99 83       	std	Y+1, r25	; 0x01
 3a4:	0d c0       	rjmp	.+26     	; 0x3c0 <vfprintf+0x14a>
 3a6:	83 36       	cpi	r24, 0x63	; 99
 3a8:	31 f0       	breq	.+12     	; 0x3b6 <vfprintf+0x140>
 3aa:	83 37       	cpi	r24, 0x73	; 115
 3ac:	71 f0       	breq	.+28     	; 0x3ca <vfprintf+0x154>
 3ae:	83 35       	cpi	r24, 0x53	; 83
 3b0:	09 f0       	breq	.+2      	; 0x3b4 <vfprintf+0x13e>
 3b2:	55 c0       	rjmp	.+170    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3b4:	20 c0       	rjmp	.+64     	; 0x3f6 <vfprintf+0x180>
 3b6:	f8 01       	movw	r30, r16
 3b8:	80 81       	ld	r24, Z
 3ba:	89 83       	std	Y+1, r24	; 0x01
 3bc:	0e 5f       	subi	r16, 0xFE	; 254
 3be:	1f 4f       	sbci	r17, 0xFF	; 255
 3c0:	88 24       	eor	r8, r8
 3c2:	83 94       	inc	r8
 3c4:	91 2c       	mov	r9, r1
 3c6:	53 01       	movw	r10, r6
 3c8:	12 c0       	rjmp	.+36     	; 0x3ee <vfprintf+0x178>
 3ca:	28 01       	movw	r4, r16
 3cc:	f2 e0       	ldi	r31, 0x02	; 2
 3ce:	4f 0e       	add	r4, r31
 3d0:	51 1c       	adc	r5, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	36 fe       	sbrs	r3, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x16c>
 3dc:	69 2d       	mov	r22, r9
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x170>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	4e d1       	rcall	.+668    	; 0x686 <strnlen>
 3ea:	4c 01       	movw	r8, r24
 3ec:	82 01       	movw	r16, r4
 3ee:	f3 2d       	mov	r31, r3
 3f0:	ff 77       	andi	r31, 0x7F	; 127
 3f2:	3f 2e       	mov	r3, r31
 3f4:	15 c0       	rjmp	.+42     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3f6:	28 01       	movw	r4, r16
 3f8:	22 e0       	ldi	r18, 0x02	; 2
 3fa:	42 0e       	add	r4, r18
 3fc:	51 1c       	adc	r5, r1
 3fe:	f8 01       	movw	r30, r16
 400:	a0 80       	ld	r10, Z
 402:	b1 80       	ldd	r11, Z+1	; 0x01
 404:	36 fe       	sbrs	r3, 6
 406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 408:	69 2d       	mov	r22, r9
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	6f ef       	ldi	r22, 0xFF	; 255
 410:	7f ef       	ldi	r23, 0xFF	; 255
 412:	c5 01       	movw	r24, r10
 414:	2d d1       	rcall	.+602    	; 0x670 <strnlen_P>
 416:	4c 01       	movw	r8, r24
 418:	f3 2d       	mov	r31, r3
 41a:	f0 68       	ori	r31, 0x80	; 128
 41c:	3f 2e       	mov	r3, r31
 41e:	82 01       	movw	r16, r4
 420:	33 fc       	sbrc	r3, 3
 422:	19 c0       	rjmp	.+50     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 424:	82 2d       	mov	r24, r2
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	88 16       	cp	r8, r24
 42a:	99 06       	cpc	r9, r25
 42c:	a0 f4       	brcc	.+40     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 42e:	b6 01       	movw	r22, r12
 430:	80 e2       	ldi	r24, 0x20	; 32
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	33 d1       	rcall	.+614    	; 0x69c <fputc>
 436:	2a 94       	dec	r2
 438:	f5 cf       	rjmp	.-22     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 43a:	f5 01       	movw	r30, r10
 43c:	37 fc       	sbrc	r3, 7
 43e:	85 91       	lpm	r24, Z+
 440:	37 fe       	sbrs	r3, 7
 442:	81 91       	ld	r24, Z+
 444:	5f 01       	movw	r10, r30
 446:	b6 01       	movw	r22, r12
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	28 d1       	rcall	.+592    	; 0x69c <fputc>
 44c:	21 10       	cpse	r2, r1
 44e:	2a 94       	dec	r2
 450:	21 e0       	ldi	r18, 0x01	; 1
 452:	82 1a       	sub	r8, r18
 454:	91 08       	sbc	r9, r1
 456:	81 14       	cp	r8, r1
 458:	91 04       	cpc	r9, r1
 45a:	79 f7       	brne	.-34     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 45c:	e1 c0       	rjmp	.+450    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 45e:	84 36       	cpi	r24, 0x64	; 100
 460:	11 f0       	breq	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 462:	89 36       	cpi	r24, 0x69	; 105
 464:	39 f5       	brne	.+78     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 466:	f8 01       	movw	r30, r16
 468:	37 fe       	sbrs	r3, 7
 46a:	07 c0       	rjmp	.+14     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46c:	60 81       	ld	r22, Z
 46e:	71 81       	ldd	r23, Z+1	; 0x01
 470:	82 81       	ldd	r24, Z+2	; 0x02
 472:	93 81       	ldd	r25, Z+3	; 0x03
 474:	0c 5f       	subi	r16, 0xFC	; 252
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	08 c0       	rjmp	.+16     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 47a:	60 81       	ld	r22, Z
 47c:	71 81       	ldd	r23, Z+1	; 0x01
 47e:	07 2e       	mov	r0, r23
 480:	00 0c       	add	r0, r0
 482:	88 0b       	sbc	r24, r24
 484:	99 0b       	sbc	r25, r25
 486:	0e 5f       	subi	r16, 0xFE	; 254
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	f3 2d       	mov	r31, r3
 48c:	ff 76       	andi	r31, 0x6F	; 111
 48e:	3f 2e       	mov	r3, r31
 490:	97 ff       	sbrs	r25, 7
 492:	09 c0       	rjmp	.+18     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 494:	90 95       	com	r25
 496:	80 95       	com	r24
 498:	70 95       	com	r23
 49a:	61 95       	neg	r22
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	f0 68       	ori	r31, 0x80	; 128
 4a4:	3f 2e       	mov	r3, r31
 4a6:	2a e0       	ldi	r18, 0x0A	; 10
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	a3 01       	movw	r20, r6
 4ac:	33 d1       	rcall	.+614    	; 0x714 <__ultoa_invert>
 4ae:	88 2e       	mov	r8, r24
 4b0:	86 18       	sub	r8, r6
 4b2:	44 c0       	rjmp	.+136    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4b4:	85 37       	cpi	r24, 0x75	; 117
 4b6:	31 f4       	brne	.+12     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b8:	23 2d       	mov	r18, r3
 4ba:	2f 7e       	andi	r18, 0xEF	; 239
 4bc:	b2 2e       	mov	r11, r18
 4be:	2a e0       	ldi	r18, 0x0A	; 10
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	25 c0       	rjmp	.+74     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4c4:	93 2d       	mov	r25, r3
 4c6:	99 7f       	andi	r25, 0xF9	; 249
 4c8:	b9 2e       	mov	r11, r25
 4ca:	8f 36       	cpi	r24, 0x6F	; 111
 4cc:	c1 f0       	breq	.+48     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4ce:	18 f4       	brcc	.+6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d0:	88 35       	cpi	r24, 0x58	; 88
 4d2:	79 f0       	breq	.+30     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d4:	ae c0       	rjmp	.+348    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 4d6:	80 37       	cpi	r24, 0x70	; 112
 4d8:	19 f0       	breq	.+6      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4da:	88 37       	cpi	r24, 0x78	; 120
 4dc:	21 f0       	breq	.+8      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4de:	a9 c0       	rjmp	.+338    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 4e0:	e9 2f       	mov	r30, r25
 4e2:	e0 61       	ori	r30, 0x10	; 16
 4e4:	be 2e       	mov	r11, r30
 4e6:	b4 fe       	sbrs	r11, 4
 4e8:	0d c0       	rjmp	.+26     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ea:	fb 2d       	mov	r31, r11
 4ec:	f4 60       	ori	r31, 0x04	; 4
 4ee:	bf 2e       	mov	r11, r31
 4f0:	09 c0       	rjmp	.+18     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f2:	34 fe       	sbrs	r3, 4
 4f4:	0a c0       	rjmp	.+20     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4f6:	29 2f       	mov	r18, r25
 4f8:	26 60       	ori	r18, 0x06	; 6
 4fa:	b2 2e       	mov	r11, r18
 4fc:	06 c0       	rjmp	.+12     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fe:	28 e0       	ldi	r18, 0x08	; 8
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	05 c0       	rjmp	.+10     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 504:	20 e1       	ldi	r18, 0x10	; 16
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	02 c0       	rjmp	.+4      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50a:	20 e1       	ldi	r18, 0x10	; 16
 50c:	32 e0       	ldi	r19, 0x02	; 2
 50e:	f8 01       	movw	r30, r16
 510:	b7 fe       	sbrs	r11, 7
 512:	07 c0       	rjmp	.+14     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 514:	60 81       	ld	r22, Z
 516:	71 81       	ldd	r23, Z+1	; 0x01
 518:	82 81       	ldd	r24, Z+2	; 0x02
 51a:	93 81       	ldd	r25, Z+3	; 0x03
 51c:	0c 5f       	subi	r16, 0xFC	; 252
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	06 c0       	rjmp	.+12     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 522:	60 81       	ld	r22, Z
 524:	71 81       	ldd	r23, Z+1	; 0x01
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	0e 5f       	subi	r16, 0xFE	; 254
 52c:	1f 4f       	sbci	r17, 0xFF	; 255
 52e:	a3 01       	movw	r20, r6
 530:	f1 d0       	rcall	.+482    	; 0x714 <__ultoa_invert>
 532:	88 2e       	mov	r8, r24
 534:	86 18       	sub	r8, r6
 536:	fb 2d       	mov	r31, r11
 538:	ff 77       	andi	r31, 0x7F	; 127
 53a:	3f 2e       	mov	r3, r31
 53c:	36 fe       	sbrs	r3, 6
 53e:	0d c0       	rjmp	.+26     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 540:	23 2d       	mov	r18, r3
 542:	2e 7f       	andi	r18, 0xFE	; 254
 544:	a2 2e       	mov	r10, r18
 546:	89 14       	cp	r8, r9
 548:	58 f4       	brcc	.+22     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 54a:	34 fe       	sbrs	r3, 4
 54c:	0b c0       	rjmp	.+22     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 54e:	32 fc       	sbrc	r3, 2
 550:	09 c0       	rjmp	.+18     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 552:	83 2d       	mov	r24, r3
 554:	8e 7e       	andi	r24, 0xEE	; 238
 556:	a8 2e       	mov	r10, r24
 558:	05 c0       	rjmp	.+10     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55a:	b8 2c       	mov	r11, r8
 55c:	a3 2c       	mov	r10, r3
 55e:	03 c0       	rjmp	.+6      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 560:	b8 2c       	mov	r11, r8
 562:	01 c0       	rjmp	.+2      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 564:	b9 2c       	mov	r11, r9
 566:	a4 fe       	sbrs	r10, 4
 568:	0f c0       	rjmp	.+30     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56a:	fe 01       	movw	r30, r28
 56c:	e8 0d       	add	r30, r8
 56e:	f1 1d       	adc	r31, r1
 570:	80 81       	ld	r24, Z
 572:	80 33       	cpi	r24, 0x30	; 48
 574:	21 f4       	brne	.+8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 576:	9a 2d       	mov	r25, r10
 578:	99 7e       	andi	r25, 0xE9	; 233
 57a:	a9 2e       	mov	r10, r25
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57e:	a2 fe       	sbrs	r10, 2
 580:	06 c0       	rjmp	.+12     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 582:	b3 94       	inc	r11
 584:	b3 94       	inc	r11
 586:	04 c0       	rjmp	.+8      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 588:	8a 2d       	mov	r24, r10
 58a:	86 78       	andi	r24, 0x86	; 134
 58c:	09 f0       	breq	.+2      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58e:	b3 94       	inc	r11
 590:	a3 fc       	sbrc	r10, 3
 592:	10 c0       	rjmp	.+32     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 594:	a0 fe       	sbrs	r10, 0
 596:	06 c0       	rjmp	.+12     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 598:	b2 14       	cp	r11, r2
 59a:	80 f4       	brcc	.+32     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 59c:	28 0c       	add	r2, r8
 59e:	92 2c       	mov	r9, r2
 5a0:	9b 18       	sub	r9, r11
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a4:	b2 14       	cp	r11, r2
 5a6:	58 f4       	brcc	.+22     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a8:	b6 01       	movw	r22, r12
 5aa:	80 e2       	ldi	r24, 0x20	; 32
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	76 d0       	rcall	.+236    	; 0x69c <fputc>
 5b0:	b3 94       	inc	r11
 5b2:	f8 cf       	rjmp	.-16     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5b4:	b2 14       	cp	r11, r2
 5b6:	18 f4       	brcc	.+6      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5b8:	2b 18       	sub	r2, r11
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5bc:	98 2c       	mov	r9, r8
 5be:	21 2c       	mov	r2, r1
 5c0:	a4 fe       	sbrs	r10, 4
 5c2:	0f c0       	rjmp	.+30     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5c4:	b6 01       	movw	r22, r12
 5c6:	80 e3       	ldi	r24, 0x30	; 48
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	68 d0       	rcall	.+208    	; 0x69c <fputc>
 5cc:	a2 fe       	sbrs	r10, 2
 5ce:	16 c0       	rjmp	.+44     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5d0:	a1 fc       	sbrc	r10, 1
 5d2:	03 c0       	rjmp	.+6      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d4:	88 e7       	ldi	r24, 0x78	; 120
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5da:	88 e5       	ldi	r24, 0x58	; 88
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	b6 01       	movw	r22, r12
 5e0:	0c c0       	rjmp	.+24     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e2:	8a 2d       	mov	r24, r10
 5e4:	86 78       	andi	r24, 0x86	; 134
 5e6:	51 f0       	breq	.+20     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5e8:	a1 fe       	sbrs	r10, 1
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ec:	8b e2       	ldi	r24, 0x2B	; 43
 5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5f0:	80 e2       	ldi	r24, 0x20	; 32
 5f2:	a7 fc       	sbrc	r10, 7
 5f4:	8d e2       	ldi	r24, 0x2D	; 45
 5f6:	b6 01       	movw	r22, r12
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	50 d0       	rcall	.+160    	; 0x69c <fputc>
 5fc:	89 14       	cp	r8, r9
 5fe:	30 f4       	brcc	.+12     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 600:	b6 01       	movw	r22, r12
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	4a d0       	rcall	.+148    	; 0x69c <fputc>
 608:	9a 94       	dec	r9
 60a:	f8 cf       	rjmp	.-16     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 60c:	8a 94       	dec	r8
 60e:	f3 01       	movw	r30, r6
 610:	e8 0d       	add	r30, r8
 612:	f1 1d       	adc	r31, r1
 614:	80 81       	ld	r24, Z
 616:	b6 01       	movw	r22, r12
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	40 d0       	rcall	.+128    	; 0x69c <fputc>
 61c:	81 10       	cpse	r8, r1
 61e:	f6 cf       	rjmp	.-20     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 620:	22 20       	and	r2, r2
 622:	09 f4       	brne	.+2      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 624:	4e ce       	rjmp	.-868    	; 0x2c2 <vfprintf+0x4c>
 626:	b6 01       	movw	r22, r12
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	37 d0       	rcall	.+110    	; 0x69c <fputc>
 62e:	2a 94       	dec	r2
 630:	f7 cf       	rjmp	.-18     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 632:	f6 01       	movw	r30, r12
 634:	86 81       	ldd	r24, Z+6	; 0x06
 636:	97 81       	ldd	r25, Z+7	; 0x07
 638:	02 c0       	rjmp	.+4      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 63a:	8f ef       	ldi	r24, 0xFF	; 255
 63c:	9f ef       	ldi	r25, 0xFF	; 255
 63e:	2b 96       	adiw	r28, 0x0b	; 11
 640:	0f b6       	in	r0, 0x3f	; 63
 642:	f8 94       	cli
 644:	de bf       	out	0x3e, r29	; 62
 646:	0f be       	out	0x3f, r0	; 63
 648:	cd bf       	out	0x3d, r28	; 61
 64a:	df 91       	pop	r29
 64c:	cf 91       	pop	r28
 64e:	1f 91       	pop	r17
 650:	0f 91       	pop	r16
 652:	ff 90       	pop	r15
 654:	ef 90       	pop	r14
 656:	df 90       	pop	r13
 658:	cf 90       	pop	r12
 65a:	bf 90       	pop	r11
 65c:	af 90       	pop	r10
 65e:	9f 90       	pop	r9
 660:	8f 90       	pop	r8
 662:	7f 90       	pop	r7
 664:	6f 90       	pop	r6
 666:	5f 90       	pop	r5
 668:	4f 90       	pop	r4
 66a:	3f 90       	pop	r3
 66c:	2f 90       	pop	r2
 66e:	08 95       	ret

00000670 <strnlen_P>:
 670:	fc 01       	movw	r30, r24
 672:	05 90       	lpm	r0, Z+
 674:	61 50       	subi	r22, 0x01	; 1
 676:	70 40       	sbci	r23, 0x00	; 0
 678:	01 10       	cpse	r0, r1
 67a:	d8 f7       	brcc	.-10     	; 0x672 <strnlen_P+0x2>
 67c:	80 95       	com	r24
 67e:	90 95       	com	r25
 680:	8e 0f       	add	r24, r30
 682:	9f 1f       	adc	r25, r31
 684:	08 95       	ret

00000686 <strnlen>:
 686:	fc 01       	movw	r30, r24
 688:	61 50       	subi	r22, 0x01	; 1
 68a:	70 40       	sbci	r23, 0x00	; 0
 68c:	01 90       	ld	r0, Z+
 68e:	01 10       	cpse	r0, r1
 690:	d8 f7       	brcc	.-10     	; 0x688 <strnlen+0x2>
 692:	80 95       	com	r24
 694:	90 95       	com	r25
 696:	8e 0f       	add	r24, r30
 698:	9f 1f       	adc	r25, r31
 69a:	08 95       	ret

0000069c <fputc>:
 69c:	0f 93       	push	r16
 69e:	1f 93       	push	r17
 6a0:	cf 93       	push	r28
 6a2:	df 93       	push	r29
 6a4:	fb 01       	movw	r30, r22
 6a6:	23 81       	ldd	r18, Z+3	; 0x03
 6a8:	21 fd       	sbrc	r18, 1
 6aa:	03 c0       	rjmp	.+6      	; 0x6b2 <fputc+0x16>
 6ac:	8f ef       	ldi	r24, 0xFF	; 255
 6ae:	9f ef       	ldi	r25, 0xFF	; 255
 6b0:	2c c0       	rjmp	.+88     	; 0x70a <fputc+0x6e>
 6b2:	22 ff       	sbrs	r18, 2
 6b4:	16 c0       	rjmp	.+44     	; 0x6e2 <fputc+0x46>
 6b6:	46 81       	ldd	r20, Z+6	; 0x06
 6b8:	57 81       	ldd	r21, Z+7	; 0x07
 6ba:	24 81       	ldd	r18, Z+4	; 0x04
 6bc:	35 81       	ldd	r19, Z+5	; 0x05
 6be:	42 17       	cp	r20, r18
 6c0:	53 07       	cpc	r21, r19
 6c2:	44 f4       	brge	.+16     	; 0x6d4 <fputc+0x38>
 6c4:	a0 81       	ld	r26, Z
 6c6:	b1 81       	ldd	r27, Z+1	; 0x01
 6c8:	9d 01       	movw	r18, r26
 6ca:	2f 5f       	subi	r18, 0xFF	; 255
 6cc:	3f 4f       	sbci	r19, 0xFF	; 255
 6ce:	31 83       	std	Z+1, r19	; 0x01
 6d0:	20 83       	st	Z, r18
 6d2:	8c 93       	st	X, r24
 6d4:	26 81       	ldd	r18, Z+6	; 0x06
 6d6:	37 81       	ldd	r19, Z+7	; 0x07
 6d8:	2f 5f       	subi	r18, 0xFF	; 255
 6da:	3f 4f       	sbci	r19, 0xFF	; 255
 6dc:	37 83       	std	Z+7, r19	; 0x07
 6de:	26 83       	std	Z+6, r18	; 0x06
 6e0:	14 c0       	rjmp	.+40     	; 0x70a <fputc+0x6e>
 6e2:	8b 01       	movw	r16, r22
 6e4:	ec 01       	movw	r28, r24
 6e6:	fb 01       	movw	r30, r22
 6e8:	00 84       	ldd	r0, Z+8	; 0x08
 6ea:	f1 85       	ldd	r31, Z+9	; 0x09
 6ec:	e0 2d       	mov	r30, r0
 6ee:	19 95       	eicall
 6f0:	89 2b       	or	r24, r25
 6f2:	e1 f6       	brne	.-72     	; 0x6ac <fputc+0x10>
 6f4:	d8 01       	movw	r26, r16
 6f6:	16 96       	adiw	r26, 0x06	; 6
 6f8:	8d 91       	ld	r24, X+
 6fa:	9c 91       	ld	r25, X
 6fc:	17 97       	sbiw	r26, 0x07	; 7
 6fe:	01 96       	adiw	r24, 0x01	; 1
 700:	17 96       	adiw	r26, 0x07	; 7
 702:	9c 93       	st	X, r25
 704:	8e 93       	st	-X, r24
 706:	16 97       	sbiw	r26, 0x06	; 6
 708:	ce 01       	movw	r24, r28
 70a:	df 91       	pop	r29
 70c:	cf 91       	pop	r28
 70e:	1f 91       	pop	r17
 710:	0f 91       	pop	r16
 712:	08 95       	ret

00000714 <__ultoa_invert>:
 714:	fa 01       	movw	r30, r20
 716:	aa 27       	eor	r26, r26
 718:	28 30       	cpi	r18, 0x08	; 8
 71a:	51 f1       	breq	.+84     	; 0x770 <__ultoa_invert+0x5c>
 71c:	20 31       	cpi	r18, 0x10	; 16
 71e:	81 f1       	breq	.+96     	; 0x780 <__ultoa_invert+0x6c>
 720:	e8 94       	clt
 722:	6f 93       	push	r22
 724:	6e 7f       	andi	r22, 0xFE	; 254
 726:	6e 5f       	subi	r22, 0xFE	; 254
 728:	7f 4f       	sbci	r23, 0xFF	; 255
 72a:	8f 4f       	sbci	r24, 0xFF	; 255
 72c:	9f 4f       	sbci	r25, 0xFF	; 255
 72e:	af 4f       	sbci	r26, 0xFF	; 255
 730:	b1 e0       	ldi	r27, 0x01	; 1
 732:	3e d0       	rcall	.+124    	; 0x7b0 <__ultoa_invert+0x9c>
 734:	b4 e0       	ldi	r27, 0x04	; 4
 736:	3c d0       	rcall	.+120    	; 0x7b0 <__ultoa_invert+0x9c>
 738:	67 0f       	add	r22, r23
 73a:	78 1f       	adc	r23, r24
 73c:	89 1f       	adc	r24, r25
 73e:	9a 1f       	adc	r25, r26
 740:	a1 1d       	adc	r26, r1
 742:	68 0f       	add	r22, r24
 744:	79 1f       	adc	r23, r25
 746:	8a 1f       	adc	r24, r26
 748:	91 1d       	adc	r25, r1
 74a:	a1 1d       	adc	r26, r1
 74c:	6a 0f       	add	r22, r26
 74e:	71 1d       	adc	r23, r1
 750:	81 1d       	adc	r24, r1
 752:	91 1d       	adc	r25, r1
 754:	a1 1d       	adc	r26, r1
 756:	20 d0       	rcall	.+64     	; 0x798 <__ultoa_invert+0x84>
 758:	09 f4       	brne	.+2      	; 0x75c <__ultoa_invert+0x48>
 75a:	68 94       	set
 75c:	3f 91       	pop	r19
 75e:	2a e0       	ldi	r18, 0x0A	; 10
 760:	26 9f       	mul	r18, r22
 762:	11 24       	eor	r1, r1
 764:	30 19       	sub	r19, r0
 766:	30 5d       	subi	r19, 0xD0	; 208
 768:	31 93       	st	Z+, r19
 76a:	de f6       	brtc	.-74     	; 0x722 <__ultoa_invert+0xe>
 76c:	cf 01       	movw	r24, r30
 76e:	08 95       	ret
 770:	46 2f       	mov	r20, r22
 772:	47 70       	andi	r20, 0x07	; 7
 774:	40 5d       	subi	r20, 0xD0	; 208
 776:	41 93       	st	Z+, r20
 778:	b3 e0       	ldi	r27, 0x03	; 3
 77a:	0f d0       	rcall	.+30     	; 0x79a <__ultoa_invert+0x86>
 77c:	c9 f7       	brne	.-14     	; 0x770 <__ultoa_invert+0x5c>
 77e:	f6 cf       	rjmp	.-20     	; 0x76c <__ultoa_invert+0x58>
 780:	46 2f       	mov	r20, r22
 782:	4f 70       	andi	r20, 0x0F	; 15
 784:	40 5d       	subi	r20, 0xD0	; 208
 786:	4a 33       	cpi	r20, 0x3A	; 58
 788:	18 f0       	brcs	.+6      	; 0x790 <__ultoa_invert+0x7c>
 78a:	49 5d       	subi	r20, 0xD9	; 217
 78c:	31 fd       	sbrc	r19, 1
 78e:	40 52       	subi	r20, 0x20	; 32
 790:	41 93       	st	Z+, r20
 792:	02 d0       	rcall	.+4      	; 0x798 <__ultoa_invert+0x84>
 794:	a9 f7       	brne	.-22     	; 0x780 <__ultoa_invert+0x6c>
 796:	ea cf       	rjmp	.-44     	; 0x76c <__ultoa_invert+0x58>
 798:	b4 e0       	ldi	r27, 0x04	; 4
 79a:	a6 95       	lsr	r26
 79c:	97 95       	ror	r25
 79e:	87 95       	ror	r24
 7a0:	77 95       	ror	r23
 7a2:	67 95       	ror	r22
 7a4:	ba 95       	dec	r27
 7a6:	c9 f7       	brne	.-14     	; 0x79a <__ultoa_invert+0x86>
 7a8:	00 97       	sbiw	r24, 0x00	; 0
 7aa:	61 05       	cpc	r22, r1
 7ac:	71 05       	cpc	r23, r1
 7ae:	08 95       	ret
 7b0:	9b 01       	movw	r18, r22
 7b2:	ac 01       	movw	r20, r24
 7b4:	0a 2e       	mov	r0, r26
 7b6:	06 94       	lsr	r0
 7b8:	57 95       	ror	r21
 7ba:	47 95       	ror	r20
 7bc:	37 95       	ror	r19
 7be:	27 95       	ror	r18
 7c0:	ba 95       	dec	r27
 7c2:	c9 f7       	brne	.-14     	; 0x7b6 <__ultoa_invert+0xa2>
 7c4:	62 0f       	add	r22, r18
 7c6:	73 1f       	adc	r23, r19
 7c8:	84 1f       	adc	r24, r20
 7ca:	95 1f       	adc	r25, r21
 7cc:	a0 1d       	adc	r26, r0
 7ce:	08 95       	ret

000007d0 <_exit>:
 7d0:	f8 94       	cli

000007d2 <__stop_program>:
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <__stop_program>
